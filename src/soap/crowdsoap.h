// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* crowdsoap.h
   Generated by wsdl2h 2.8.12 from http://cartman.my-ho.st/crowd/services/SecurityServer?wsdl and typemap.dat
   2014-10-19 15:14:28 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on crowdsoap.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Use wsdl2h option -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:SecurityServer"
ns2 = "http://authentication.integration.crowd.atlassian.com"
ns3 = "http://soap.integration.crowd.atlassian.com"
ns4 = "http://exception.integration.crowd.atlassian.com"
ns5 = "http://rmi.java"
ns6 = "http://lang.java"
ns7 = "http://model.integration.crowd.atlassian.com"
ns8 = "http://user.model.integration.crowd.atlassian.com"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://authentication.integration.crowd.atlassian.com"
//gsoap ns2   schema namespace:	http://authentication.integration.crowd.atlassian.com
//gsoap ns2   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns1	"urn:SecurityServer"
//gsoap ns1   schema namespace:	urn:SecurityServer
//gsoap ns1   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns3	"http://soap.integration.crowd.atlassian.com"
//gsoap ns3   schema namespace:	http://soap.integration.crowd.atlassian.com
//gsoap ns3   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns4	"http://exception.integration.crowd.atlassian.com"
//gsoap ns4   schema namespace:	http://exception.integration.crowd.atlassian.com
//gsoap ns4   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns5	"http://rmi.java"
//gsoap ns5   schema namespace:	http://rmi.java
//gsoap ns5   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns6	"http://lang.java"
//gsoap ns6   schema namespace:	http://lang.java
//gsoap ns6   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns7	"http://model.integration.crowd.atlassian.com"
//gsoap ns7   schema namespace:	http://model.integration.crowd.atlassian.com
//gsoap ns7   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns8	"http://user.model.integration.crowd.atlassian.com"
//gsoap ns8   schema namespace:	http://user.model.integration.crowd.atlassian.com
//gsoap ns8   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns1	"urn:SecurityServer"
//gsoap ns1   schema namespace:	urn:SecurityServer
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns2__AuthenticatedToken.
class ns2__AuthenticatedToken;

//  Forward declaration of class ns2__PasswordCredential.
class ns2__PasswordCredential;

//  Forward declaration of class ns2__ArrayOfValidationFactor.
class ns2__ArrayOfValidationFactor;

//  Forward declaration of class ns2__ValidationFactor.
class ns2__ValidationFactor;

//  Forward declaration of class ns2__UserAuthenticationContext.
class ns2__UserAuthenticationContext;

//  Forward declaration of class ns2__ApplicationAuthenticationContext.
class ns2__ApplicationAuthenticationContext;

//  Forward declaration of class ns1__ArrayOfString.
class ns1__ArrayOfString;

//  Forward declaration of class _ns1__findAllGroupRelationships.
class _ns1__findAllGroupRelationships;

//  Forward declaration of class _ns1__findAllGroupRelationshipsResponse.
class _ns1__findAllGroupRelationshipsResponse;

//  Forward declaration of class _ns1__addGroup.
class _ns1__addGroup;

//  Forward declaration of class _ns1__addGroupResponse.
class _ns1__addGroupResponse;

//  Forward declaration of class _ns1__addPrincipalToRole.
class _ns1__addPrincipalToRole;

//  Forward declaration of class _ns1__addPrincipalToRoleResponse.
class _ns1__addPrincipalToRoleResponse;

//  Forward declaration of class _ns1__findPrincipalByToken.
class _ns1__findPrincipalByToken;

//  Forward declaration of class _ns1__findPrincipalByTokenResponse.
class _ns1__findPrincipalByTokenResponse;

//  Forward declaration of class _ns1__updatePrincipalCredential.
class _ns1__updatePrincipalCredential;

//  Forward declaration of class _ns1__updatePrincipalCredentialResponse.
class _ns1__updatePrincipalCredentialResponse;

//  Forward declaration of class _ns1__getGrantedAuthorities.
class _ns1__getGrantedAuthorities;

//  Forward declaration of class _ns1__getGrantedAuthoritiesResponse.
class _ns1__getGrantedAuthoritiesResponse;

//  Forward declaration of class _ns1__addPrincipal.
class _ns1__addPrincipal;

//  Forward declaration of class _ns1__addPrincipalResponse.
class _ns1__addPrincipalResponse;

//  Forward declaration of class _ns1__addAttributeToPrincipal.
class _ns1__addAttributeToPrincipal;

//  Forward declaration of class _ns1__addAttributeToPrincipalResponse.
class _ns1__addAttributeToPrincipalResponse;

//  Forward declaration of class _ns1__invalidatePrincipalToken.
class _ns1__invalidatePrincipalToken;

//  Forward declaration of class _ns1__invalidatePrincipalTokenResponse.
class _ns1__invalidatePrincipalTokenResponse;

//  Forward declaration of class _ns1__findAllGroupNames.
class _ns1__findAllGroupNames;

//  Forward declaration of class _ns1__findAllGroupNamesResponse.
class _ns1__findAllGroupNamesResponse;

//  Forward declaration of class _ns1__findRoleMemberships.
class _ns1__findRoleMemberships;

//  Forward declaration of class _ns1__findRoleMembershipsResponse.
class _ns1__findRoleMembershipsResponse;

//  Forward declaration of class _ns1__removePrincipal.
class _ns1__removePrincipal;

//  Forward declaration of class _ns1__removePrincipalResponse.
class _ns1__removePrincipalResponse;

//  Forward declaration of class _ns1__isValidPrincipalToken.
class _ns1__isValidPrincipalToken;

//  Forward declaration of class _ns1__isValidPrincipalTokenResponse.
class _ns1__isValidPrincipalTokenResponse;

//  Forward declaration of class _ns1__authenticatePrincipalSimple.
class _ns1__authenticatePrincipalSimple;

//  Forward declaration of class _ns1__authenticatePrincipalSimpleResponse.
class _ns1__authenticatePrincipalSimpleResponse;

//  Forward declaration of class _ns1__removeRole.
class _ns1__removeRole;

//  Forward declaration of class _ns1__removeRoleResponse.
class _ns1__removeRoleResponse;

//  Forward declaration of class _ns1__getCookieInfo.
class _ns1__getCookieInfo;

//  Forward declaration of class _ns1__getCookieInfoResponse.
class _ns1__getCookieInfoResponse;

//  Forward declaration of class _ns1__updatePrincipalAttribute.
class _ns1__updatePrincipalAttribute;

//  Forward declaration of class _ns1__updatePrincipalAttributeResponse.
class _ns1__updatePrincipalAttributeResponse;

//  Forward declaration of class _ns1__searchGroups.
class _ns1__searchGroups;

//  Forward declaration of class _ns1__searchGroupsResponse.
class _ns1__searchGroupsResponse;

//  Forward declaration of class _ns1__getCacheTime.
class _ns1__getCacheTime;

//  Forward declaration of class _ns1__getCacheTimeResponse.
class _ns1__getCacheTimeResponse;

//  Forward declaration of class _ns1__isRoleMember.
class _ns1__isRoleMember;

//  Forward declaration of class _ns1__isRoleMemberResponse.
class _ns1__isRoleMemberResponse;

//  Forward declaration of class _ns1__updateGroup.
class _ns1__updateGroup;

//  Forward declaration of class _ns1__updateGroupResponse.
class _ns1__updateGroupResponse;

//  Forward declaration of class _ns1__addAttributeToGroup.
class _ns1__addAttributeToGroup;

//  Forward declaration of class _ns1__addAttributeToGroupResponse.
class _ns1__addAttributeToGroupResponse;

//  Forward declaration of class _ns1__findAllRoleNames.
class _ns1__findAllRoleNames;

//  Forward declaration of class _ns1__findAllRoleNamesResponse.
class _ns1__findAllRoleNamesResponse;

//  Forward declaration of class _ns1__findRoleByName.
class _ns1__findRoleByName;

//  Forward declaration of class _ns1__findRoleByNameResponse.
class _ns1__findRoleByNameResponse;

//  Forward declaration of class _ns1__isCacheEnabled.
class _ns1__isCacheEnabled;

//  Forward declaration of class _ns1__isCacheEnabledResponse.
class _ns1__isCacheEnabledResponse;

//  Forward declaration of class _ns1__findGroupByName.
class _ns1__findGroupByName;

//  Forward declaration of class _ns1__findGroupByNameResponse.
class _ns1__findGroupByNameResponse;

//  Forward declaration of class _ns1__findGroupWithAttributesByName.
class _ns1__findGroupWithAttributesByName;

//  Forward declaration of class _ns1__findGroupWithAttributesByNameResponse.
class _ns1__findGroupWithAttributesByNameResponse;

//  Forward declaration of class _ns1__removePrincipalFromRole.
class _ns1__removePrincipalFromRole;

//  Forward declaration of class _ns1__removePrincipalFromRoleResponse.
class _ns1__removePrincipalFromRoleResponse;

//  Forward declaration of class _ns1__findPrincipalWithAttributesByName.
class _ns1__findPrincipalWithAttributesByName;

//  Forward declaration of class _ns1__findPrincipalWithAttributesByNameResponse.
class _ns1__findPrincipalWithAttributesByNameResponse;

//  Forward declaration of class _ns1__authenticatePrincipal.
class _ns1__authenticatePrincipal;

//  Forward declaration of class _ns1__authenticatePrincipalResponse.
class _ns1__authenticatePrincipalResponse;

//  Forward declaration of class _ns1__findGroupMemberships.
class _ns1__findGroupMemberships;

//  Forward declaration of class _ns1__findGroupMembershipsResponse.
class _ns1__findGroupMembershipsResponse;

//  Forward declaration of class _ns1__addPrincipalToGroup.
class _ns1__addPrincipalToGroup;

//  Forward declaration of class _ns1__addPrincipalToGroupResponse.
class _ns1__addPrincipalToGroupResponse;

//  Forward declaration of class _ns1__removeGroup.
class _ns1__removeGroup;

//  Forward declaration of class _ns1__removeGroupResponse.
class _ns1__removeGroupResponse;

//  Forward declaration of class _ns1__removeAttributeFromGroup.
class _ns1__removeAttributeFromGroup;

//  Forward declaration of class _ns1__removeAttributeFromGroupResponse.
class _ns1__removeAttributeFromGroupResponse;

//  Forward declaration of class _ns1__addAllPrincipals.
class _ns1__addAllPrincipals;

//  Forward declaration of class _ns1__addAllPrincipalsResponse.
class _ns1__addAllPrincipalsResponse;

//  Forward declaration of class _ns1__removeAttributeFromPrincipal.
class _ns1__removeAttributeFromPrincipal;

//  Forward declaration of class _ns1__removeAttributeFromPrincipalResponse.
class _ns1__removeAttributeFromPrincipalResponse;

//  Forward declaration of class _ns1__addRole.
class _ns1__addRole;

//  Forward declaration of class _ns1__addRoleResponse.
class _ns1__addRoleResponse;

//  Forward declaration of class _ns1__findAllPrincipalNames.
class _ns1__findAllPrincipalNames;

//  Forward declaration of class _ns1__findAllPrincipalNamesResponse.
class _ns1__findAllPrincipalNamesResponse;

//  Forward declaration of class _ns1__createPrincipalToken.
class _ns1__createPrincipalToken;

//  Forward declaration of class _ns1__createPrincipalTokenResponse.
class _ns1__createPrincipalTokenResponse;

//  Forward declaration of class _ns1__searchRoles.
class _ns1__searchRoles;

//  Forward declaration of class _ns1__searchRolesResponse.
class _ns1__searchRolesResponse;

//  Forward declaration of class _ns1__removePrincipalFromGroup.
class _ns1__removePrincipalFromGroup;

//  Forward declaration of class _ns1__removePrincipalFromGroupResponse.
class _ns1__removePrincipalFromGroupResponse;

//  Forward declaration of class _ns1__findPrincipalByName.
class _ns1__findPrincipalByName;

//  Forward declaration of class _ns1__findPrincipalByNameResponse.
class _ns1__findPrincipalByNameResponse;

//  Forward declaration of class _ns1__resetPrincipalCredential.
class _ns1__resetPrincipalCredential;

//  Forward declaration of class _ns1__resetPrincipalCredentialResponse.
class _ns1__resetPrincipalCredentialResponse;

//  Forward declaration of class _ns1__updateGroupAttribute.
class _ns1__updateGroupAttribute;

//  Forward declaration of class _ns1__updateGroupAttributeResponse.
class _ns1__updateGroupAttributeResponse;

//  Forward declaration of class _ns1__isGroupMember.
class _ns1__isGroupMember;

//  Forward declaration of class _ns1__isGroupMemberResponse.
class _ns1__isGroupMemberResponse;

//  Forward declaration of class _ns1__searchPrincipals.
class _ns1__searchPrincipals;

//  Forward declaration of class _ns1__searchPrincipalsResponse.
class _ns1__searchPrincipalsResponse;

//  Forward declaration of class _ns1__getDomain.
class _ns1__getDomain;

//  Forward declaration of class _ns1__getDomainResponse.
class _ns1__getDomainResponse;

//  Forward declaration of class _ns1__authenticateApplication.
class _ns1__authenticateApplication;

//  Forward declaration of class _ns1__authenticateApplicationResponse.
class _ns1__authenticateApplicationResponse;

//  Forward declaration of class ns3__ArrayOfSOAPNestableGroup.
class ns3__ArrayOfSOAPNestableGroup;

//  Forward declaration of class ns3__SOAPNestableGroup.
class ns3__SOAPNestableGroup;

//  Forward declaration of class ns3__ArrayOfSOAPAttribute.
class ns3__ArrayOfSOAPAttribute;

//  Forward declaration of class ns3__SOAPAttribute.
class ns3__SOAPAttribute;

//  Forward declaration of class ns3__SOAPGroup.
class ns3__SOAPGroup;

//  Forward declaration of class ns3__SOAPPrincipal.
class ns3__SOAPPrincipal;

//  Forward declaration of class ns3__SOAPCookieInfo.
class ns3__SOAPCookieInfo;

//  Forward declaration of class ns3__ArrayOfSearchRestriction.
class ns3__ArrayOfSearchRestriction;

//  Forward declaration of class ns3__SearchRestriction.
class ns3__SearchRestriction;

//  Forward declaration of class ns3__ArrayOfSOAPGroup.
class ns3__ArrayOfSOAPGroup;

//  Forward declaration of class ns3__SOAPRole.
class ns3__SOAPRole;

//  Forward declaration of class ns3__ArrayOfSOAPPrincipalWithCredential.
class ns3__ArrayOfSOAPPrincipalWithCredential;

//  Forward declaration of class ns3__SOAPPrincipalWithCredential.
class ns3__SOAPPrincipalWithCredential;

//  Forward declaration of class ns3__ArrayOfSOAPRole.
class ns3__ArrayOfSOAPRole;

//  Forward declaration of class ns3__ArrayOfSOAPPrincipal.
class ns3__ArrayOfSOAPPrincipal;

//  Forward declaration of class ns4__InvalidAuthorizationTokenException.
class ns4__InvalidAuthorizationTokenException;

//  Forward declaration of class ns4__InvalidGroupException.
class ns4__InvalidGroupException;

//  Forward declaration of class ns4__ApplicationPermissionException.
class ns4__ApplicationPermissionException;

//  Forward declaration of class ns4__ObjectNotFoundException.
class ns4__ObjectNotFoundException;

//  Forward declaration of class ns4__InvalidTokenException.
class ns4__InvalidTokenException;

//  Forward declaration of class ns4__InvalidCredentialException.
class ns4__InvalidCredentialException;

//  Forward declaration of class ns4__InvalidUserException.
class ns4__InvalidUserException;

//  Forward declaration of class ns4__ApplicationAccessDeniedException.
class ns4__ApplicationAccessDeniedException;

//  Forward declaration of class ns4__ExpiredCredentialException.
class ns4__ExpiredCredentialException;

//  Forward declaration of class ns4__InvalidAuthenticationException.
class ns4__InvalidAuthenticationException;

//  Forward declaration of class ns4__InactiveAccountException.
class ns4__InactiveAccountException;

//  Forward declaration of class ns4__BulkAddFailedException.
class ns4__BulkAddFailedException;

//  Forward declaration of class ns4__InvalidRoleException.
class ns4__InvalidRoleException;

//  Forward declaration of class ns4__InvalidEmailAddressException.
class ns4__InvalidEmailAddressException;

//  Forward declaration of class ns5__RemoteException.
class ns5__RemoteException;

//  Forward declaration of class ns6__Throwable.
class ns6__Throwable;

//  Forward declaration of class ns7__DirectoryEntity.
class ns7__DirectoryEntity;

//  Forward declaration of class ns8__User.
class ns8__User;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://authentication.integration.crowd.atlassian.com                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://soap.integration.crowd.atlassian.com                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://exception.integration.crowd.atlassian.com                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://rmi.java                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://lang.java                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://model.integration.crowd.atlassian.com                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://user.model.integration.crowd.atlassian.com                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://authentication.integration.crowd.atlassian.com                    *
 *                                                                            *
\******************************************************************************/


/// "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken is a complexType.
/// class ns2__AuthenticatedToken operations:
/// - soap_new_ns2__AuthenticatedToken(soap*) allocate
/// - soap_new_ns2__AuthenticatedToken(soap*, int num) allocate array
/// - soap_new_req_ns2__AuthenticatedToken(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__AuthenticatedToken(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__AuthenticatedToken(soap*, ns2__AuthenticatedToken*) deserialize from a stream
/// - int soap_write_ns2__AuthenticatedToken(soap, ns2__AuthenticatedToken*) serialize to a stream
class ns2__AuthenticatedToken
{ public:
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element token of type xs:string.
    std::string*                         token                          0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://authentication.integration.crowd.atlassian.com":PasswordCredential is a complexType.
/// class ns2__PasswordCredential operations:
/// - soap_new_ns2__PasswordCredential(soap*) allocate
/// - soap_new_ns2__PasswordCredential(soap*, int num) allocate array
/// - soap_new_req_ns2__PasswordCredential(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__PasswordCredential(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__PasswordCredential(soap*, ns2__PasswordCredential*) deserialize from a stream
/// - int soap_write_ns2__PasswordCredential(soap, ns2__PasswordCredential*) serialize to a stream
class ns2__PasswordCredential
{ public:
/// Element credential of type xs:string.
    std::string*                         credential                     0;	///< Nillable pointer.
/// Element encryptedCredential of type xs:boolean.
    bool*                                encryptedCredential            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://authentication.integration.crowd.atlassian.com":ArrayOfValidationFactor is a complexType.
/// class ns2__ArrayOfValidationFactor operations:
/// - soap_new_ns2__ArrayOfValidationFactor(soap*) allocate
/// - soap_new_ns2__ArrayOfValidationFactor(soap*, int num) allocate array
/// - soap_new_req_ns2__ArrayOfValidationFactor(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__ArrayOfValidationFactor(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__ArrayOfValidationFactor(soap*, ns2__ArrayOfValidationFactor*) deserialize from a stream
/// - int soap_write_ns2__ArrayOfValidationFactor(soap, ns2__ArrayOfValidationFactor*) serialize to a stream
class ns2__ArrayOfValidationFactor
{ public:
/// Vector of ns2__ValidationFactor* with length 0..unbounded
    std::vector<ns2__ValidationFactor* > ValidationFactor               0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://authentication.integration.crowd.atlassian.com":ValidationFactor is a complexType.
/// class ns2__ValidationFactor operations:
/// - soap_new_ns2__ValidationFactor(soap*) allocate
/// - soap_new_ns2__ValidationFactor(soap*, int num) allocate array
/// - soap_new_req_ns2__ValidationFactor(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__ValidationFactor(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__ValidationFactor(soap*, ns2__ValidationFactor*) deserialize from a stream
/// - int soap_write_ns2__ValidationFactor(soap, ns2__ValidationFactor*) serialize to a stream
class ns2__ValidationFactor
{ public:
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element value of type xs:string.
    std::string*                         value                          0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://authentication.integration.crowd.atlassian.com":UserAuthenticationContext is a complexType.
/// class ns2__UserAuthenticationContext operations:
/// - soap_new_ns2__UserAuthenticationContext(soap*) allocate
/// - soap_new_ns2__UserAuthenticationContext(soap*, int num) allocate array
/// - soap_new_req_ns2__UserAuthenticationContext(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__UserAuthenticationContext(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__UserAuthenticationContext(soap*, ns2__UserAuthenticationContext*) deserialize from a stream
/// - int soap_write_ns2__UserAuthenticationContext(soap, ns2__UserAuthenticationContext*) serialize to a stream
class ns2__UserAuthenticationContext
{ public:
/// Element application of type xs:string.
    std::string*                         application                    0;	///< Nillable pointer.
/// Element credential of type "http://authentication.integration.crowd.atlassian.com":PasswordCredential.
    ns2__PasswordCredential*             credential                     0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element validationFactors of type "http://authentication.integration.crowd.atlassian.com":ArrayOfValidationFactor.
    ns2__ArrayOfValidationFactor*        validationFactors              0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://authentication.integration.crowd.atlassian.com":ApplicationAuthenticationContext is a complexType.
/// class ns2__ApplicationAuthenticationContext operations:
/// - soap_new_ns2__ApplicationAuthenticationContext(soap*) allocate
/// - soap_new_ns2__ApplicationAuthenticationContext(soap*, int num) allocate array
/// - soap_new_req_ns2__ApplicationAuthenticationContext(soap*, ...) allocate, set required members
/// - soap_new_set_ns2__ApplicationAuthenticationContext(soap*, ...) allocate, set all public members
/// - int soap_read_ns2__ApplicationAuthenticationContext(soap*, ns2__ApplicationAuthenticationContext*) deserialize from a stream
/// - int soap_write_ns2__ApplicationAuthenticationContext(soap, ns2__ApplicationAuthenticationContext*) serialize to a stream
class ns2__ApplicationAuthenticationContext
{ public:
/// Element credential of type "http://authentication.integration.crowd.atlassian.com":PasswordCredential.
    ns2__PasswordCredential*             credential                     0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element validationFactors of type "http://authentication.integration.crowd.atlassian.com":ArrayOfValidationFactor.
    ns2__ArrayOfValidationFactor*        validationFactors              0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/// "urn:SecurityServer":ArrayOfString is a complexType.
/// class ns1__ArrayOfString operations:
/// - soap_new_ns1__ArrayOfString(soap*) allocate
/// - soap_new_ns1__ArrayOfString(soap*, int num) allocate array
/// - soap_new_req_ns1__ArrayOfString(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ArrayOfString(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ArrayOfString(soap*, ns1__ArrayOfString*) deserialize from a stream
/// - int soap_write_ns1__ArrayOfString(soap, ns1__ArrayOfString*) serialize to a stream
class ns1__ArrayOfString
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > string                         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllGroupRelationships

/// "urn:SecurityServer":findAllGroupRelationships is a complexType.
/// class _ns1__findAllGroupRelationships operations:
/// - soap_new__ns1__findAllGroupRelationships(soap*) allocate
/// - soap_new__ns1__findAllGroupRelationships(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllGroupRelationships(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllGroupRelationships(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllGroupRelationships(soap*, _ns1__findAllGroupRelationships*) deserialize from a stream
/// - int soap_write__ns1__findAllGroupRelationships(soap, _ns1__findAllGroupRelationships*) serialize to a stream
class _ns1__findAllGroupRelationships
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllGroupRelationshipsResponse

/// "urn:SecurityServer":findAllGroupRelationshipsResponse is a complexType.
/// class _ns1__findAllGroupRelationshipsResponse operations:
/// - soap_new__ns1__findAllGroupRelationshipsResponse(soap*) allocate
/// - soap_new__ns1__findAllGroupRelationshipsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllGroupRelationshipsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllGroupRelationshipsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllGroupRelationshipsResponse(soap*, _ns1__findAllGroupRelationshipsResponse*) deserialize from a stream
/// - int soap_write__ns1__findAllGroupRelationshipsResponse(soap, _ns1__findAllGroupRelationshipsResponse*) serialize to a stream
class _ns1__findAllGroupRelationshipsResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPNestableGroup.
    ns3__ArrayOfSOAPNestableGroup*       out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addGroup

/// "urn:SecurityServer":addGroup is a complexType.
/// class _ns1__addGroup operations:
/// - soap_new__ns1__addGroup(soap*) allocate
/// - soap_new__ns1__addGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__addGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addGroup(soap*, _ns1__addGroup*) deserialize from a stream
/// - int soap_write__ns1__addGroup(soap, _ns1__addGroup*) serialize to a stream
class _ns1__addGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":SOAPGroup.
    ns3__SOAPGroup*                      in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addGroupResponse

/// "urn:SecurityServer":addGroupResponse is a complexType.
/// class _ns1__addGroupResponse operations:
/// - soap_new__ns1__addGroupResponse(soap*) allocate
/// - soap_new__ns1__addGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addGroupResponse(soap*, _ns1__addGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__addGroupResponse(soap, _ns1__addGroupResponse*) serialize to a stream
class _ns1__addGroupResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPGroup.
    ns3__SOAPGroup*                      out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipalToRole

/// "urn:SecurityServer":addPrincipalToRole is a complexType.
/// class _ns1__addPrincipalToRole operations:
/// - soap_new__ns1__addPrincipalToRole(soap*) allocate
/// - soap_new__ns1__addPrincipalToRole(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipalToRole(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipalToRole(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipalToRole(soap*, _ns1__addPrincipalToRole*) deserialize from a stream
/// - int soap_write__ns1__addPrincipalToRole(soap, _ns1__addPrincipalToRole*) serialize to a stream
class _ns1__addPrincipalToRole
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipalToRoleResponse

/// "urn:SecurityServer":addPrincipalToRoleResponse is a complexType.
/// class _ns1__addPrincipalToRoleResponse operations:
/// - soap_new__ns1__addPrincipalToRoleResponse(soap*) allocate
/// - soap_new__ns1__addPrincipalToRoleResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipalToRoleResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipalToRoleResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipalToRoleResponse(soap*, _ns1__addPrincipalToRoleResponse*) deserialize from a stream
/// - int soap_write__ns1__addPrincipalToRoleResponse(soap, _ns1__addPrincipalToRoleResponse*) serialize to a stream
class _ns1__addPrincipalToRoleResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalByToken

/// "urn:SecurityServer":findPrincipalByToken is a complexType.
/// class _ns1__findPrincipalByToken operations:
/// - soap_new__ns1__findPrincipalByToken(soap*) allocate
/// - soap_new__ns1__findPrincipalByToken(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalByToken(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalByToken(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalByToken(soap*, _ns1__findPrincipalByToken*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalByToken(soap, _ns1__findPrincipalByToken*) serialize to a stream
class _ns1__findPrincipalByToken
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalByTokenResponse

/// "urn:SecurityServer":findPrincipalByTokenResponse is a complexType.
/// class _ns1__findPrincipalByTokenResponse operations:
/// - soap_new__ns1__findPrincipalByTokenResponse(soap*) allocate
/// - soap_new__ns1__findPrincipalByTokenResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalByTokenResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalByTokenResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalByTokenResponse(soap*, _ns1__findPrincipalByTokenResponse*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalByTokenResponse(soap, _ns1__findPrincipalByTokenResponse*) serialize to a stream
class _ns1__findPrincipalByTokenResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updatePrincipalCredential

/// "urn:SecurityServer":updatePrincipalCredential is a complexType.
/// class _ns1__updatePrincipalCredential operations:
/// - soap_new__ns1__updatePrincipalCredential(soap*) allocate
/// - soap_new__ns1__updatePrincipalCredential(soap*, int num) allocate array
/// - soap_new_req__ns1__updatePrincipalCredential(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updatePrincipalCredential(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updatePrincipalCredential(soap*, _ns1__updatePrincipalCredential*) deserialize from a stream
/// - int soap_write__ns1__updatePrincipalCredential(soap, _ns1__updatePrincipalCredential*) serialize to a stream
class _ns1__updatePrincipalCredential
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://authentication.integration.crowd.atlassian.com":PasswordCredential.
    ns2__PasswordCredential*             in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updatePrincipalCredentialResponse

/// "urn:SecurityServer":updatePrincipalCredentialResponse is a complexType.
/// class _ns1__updatePrincipalCredentialResponse operations:
/// - soap_new__ns1__updatePrincipalCredentialResponse(soap*) allocate
/// - soap_new__ns1__updatePrincipalCredentialResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__updatePrincipalCredentialResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updatePrincipalCredentialResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updatePrincipalCredentialResponse(soap*, _ns1__updatePrincipalCredentialResponse*) deserialize from a stream
/// - int soap_write__ns1__updatePrincipalCredentialResponse(soap, _ns1__updatePrincipalCredentialResponse*) serialize to a stream
class _ns1__updatePrincipalCredentialResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getGrantedAuthorities

/// "urn:SecurityServer":getGrantedAuthorities is a complexType.
/// class _ns1__getGrantedAuthorities operations:
/// - soap_new__ns1__getGrantedAuthorities(soap*) allocate
/// - soap_new__ns1__getGrantedAuthorities(soap*, int num) allocate array
/// - soap_new_req__ns1__getGrantedAuthorities(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getGrantedAuthorities(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getGrantedAuthorities(soap*, _ns1__getGrantedAuthorities*) deserialize from a stream
/// - int soap_write__ns1__getGrantedAuthorities(soap, _ns1__getGrantedAuthorities*) serialize to a stream
class _ns1__getGrantedAuthorities
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getGrantedAuthoritiesResponse

/// "urn:SecurityServer":getGrantedAuthoritiesResponse is a complexType.
/// class _ns1__getGrantedAuthoritiesResponse operations:
/// - soap_new__ns1__getGrantedAuthoritiesResponse(soap*) allocate
/// - soap_new__ns1__getGrantedAuthoritiesResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__getGrantedAuthoritiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getGrantedAuthoritiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getGrantedAuthoritiesResponse(soap*, _ns1__getGrantedAuthoritiesResponse*) deserialize from a stream
/// - int soap_write__ns1__getGrantedAuthoritiesResponse(soap, _ns1__getGrantedAuthoritiesResponse*) serialize to a stream
class _ns1__getGrantedAuthoritiesResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipal

/// "urn:SecurityServer":addPrincipal is a complexType.
/// class _ns1__addPrincipal operations:
/// - soap_new__ns1__addPrincipal(soap*) allocate
/// - soap_new__ns1__addPrincipal(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipal(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipal(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipal(soap*, _ns1__addPrincipal*) deserialize from a stream
/// - int soap_write__ns1__addPrincipal(soap, _ns1__addPrincipal*) serialize to a stream
class _ns1__addPrincipal
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://authentication.integration.crowd.atlassian.com":PasswordCredential.
    ns2__PasswordCredential*             in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipalResponse

/// "urn:SecurityServer":addPrincipalResponse is a complexType.
/// class _ns1__addPrincipalResponse operations:
/// - soap_new__ns1__addPrincipalResponse(soap*) allocate
/// - soap_new__ns1__addPrincipalResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipalResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipalResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipalResponse(soap*, _ns1__addPrincipalResponse*) deserialize from a stream
/// - int soap_write__ns1__addPrincipalResponse(soap, _ns1__addPrincipalResponse*) serialize to a stream
class _ns1__addPrincipalResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAttributeToPrincipal

/// "urn:SecurityServer":addAttributeToPrincipal is a complexType.
/// class _ns1__addAttributeToPrincipal operations:
/// - soap_new__ns1__addAttributeToPrincipal(soap*) allocate
/// - soap_new__ns1__addAttributeToPrincipal(soap*, int num) allocate array
/// - soap_new_req__ns1__addAttributeToPrincipal(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAttributeToPrincipal(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAttributeToPrincipal(soap*, _ns1__addAttributeToPrincipal*) deserialize from a stream
/// - int soap_write__ns1__addAttributeToPrincipal(soap, _ns1__addAttributeToPrincipal*) serialize to a stream
class _ns1__addAttributeToPrincipal
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://soap.integration.crowd.atlassian.com":SOAPAttribute.
    ns3__SOAPAttribute*                  in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAttributeToPrincipalResponse

/// "urn:SecurityServer":addAttributeToPrincipalResponse is a complexType.
/// class _ns1__addAttributeToPrincipalResponse operations:
/// - soap_new__ns1__addAttributeToPrincipalResponse(soap*) allocate
/// - soap_new__ns1__addAttributeToPrincipalResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addAttributeToPrincipalResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAttributeToPrincipalResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAttributeToPrincipalResponse(soap*, _ns1__addAttributeToPrincipalResponse*) deserialize from a stream
/// - int soap_write__ns1__addAttributeToPrincipalResponse(soap, _ns1__addAttributeToPrincipalResponse*) serialize to a stream
class _ns1__addAttributeToPrincipalResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":invalidatePrincipalToken

/// "urn:SecurityServer":invalidatePrincipalToken is a complexType.
/// class _ns1__invalidatePrincipalToken operations:
/// - soap_new__ns1__invalidatePrincipalToken(soap*) allocate
/// - soap_new__ns1__invalidatePrincipalToken(soap*, int num) allocate array
/// - soap_new_req__ns1__invalidatePrincipalToken(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__invalidatePrincipalToken(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__invalidatePrincipalToken(soap*, _ns1__invalidatePrincipalToken*) deserialize from a stream
/// - int soap_write__ns1__invalidatePrincipalToken(soap, _ns1__invalidatePrincipalToken*) serialize to a stream
class _ns1__invalidatePrincipalToken
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":invalidatePrincipalTokenResponse

/// "urn:SecurityServer":invalidatePrincipalTokenResponse is a complexType.
/// class _ns1__invalidatePrincipalTokenResponse operations:
/// - soap_new__ns1__invalidatePrincipalTokenResponse(soap*) allocate
/// - soap_new__ns1__invalidatePrincipalTokenResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__invalidatePrincipalTokenResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__invalidatePrincipalTokenResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__invalidatePrincipalTokenResponse(soap*, _ns1__invalidatePrincipalTokenResponse*) deserialize from a stream
/// - int soap_write__ns1__invalidatePrincipalTokenResponse(soap, _ns1__invalidatePrincipalTokenResponse*) serialize to a stream
class _ns1__invalidatePrincipalTokenResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllGroupNames

/// "urn:SecurityServer":findAllGroupNames is a complexType.
/// class _ns1__findAllGroupNames operations:
/// - soap_new__ns1__findAllGroupNames(soap*) allocate
/// - soap_new__ns1__findAllGroupNames(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllGroupNames(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllGroupNames(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllGroupNames(soap*, _ns1__findAllGroupNames*) deserialize from a stream
/// - int soap_write__ns1__findAllGroupNames(soap, _ns1__findAllGroupNames*) serialize to a stream
class _ns1__findAllGroupNames
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllGroupNamesResponse

/// "urn:SecurityServer":findAllGroupNamesResponse is a complexType.
/// class _ns1__findAllGroupNamesResponse operations:
/// - soap_new__ns1__findAllGroupNamesResponse(soap*) allocate
/// - soap_new__ns1__findAllGroupNamesResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllGroupNamesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllGroupNamesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllGroupNamesResponse(soap*, _ns1__findAllGroupNamesResponse*) deserialize from a stream
/// - int soap_write__ns1__findAllGroupNamesResponse(soap, _ns1__findAllGroupNamesResponse*) serialize to a stream
class _ns1__findAllGroupNamesResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findRoleMemberships

/// "urn:SecurityServer":findRoleMemberships is a complexType.
/// class _ns1__findRoleMemberships operations:
/// - soap_new__ns1__findRoleMemberships(soap*) allocate
/// - soap_new__ns1__findRoleMemberships(soap*, int num) allocate array
/// - soap_new_req__ns1__findRoleMemberships(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findRoleMemberships(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findRoleMemberships(soap*, _ns1__findRoleMemberships*) deserialize from a stream
/// - int soap_write__ns1__findRoleMemberships(soap, _ns1__findRoleMemberships*) serialize to a stream
class _ns1__findRoleMemberships
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findRoleMembershipsResponse

/// "urn:SecurityServer":findRoleMembershipsResponse is a complexType.
/// class _ns1__findRoleMembershipsResponse operations:
/// - soap_new__ns1__findRoleMembershipsResponse(soap*) allocate
/// - soap_new__ns1__findRoleMembershipsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findRoleMembershipsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findRoleMembershipsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findRoleMembershipsResponse(soap*, _ns1__findRoleMembershipsResponse*) deserialize from a stream
/// - int soap_write__ns1__findRoleMembershipsResponse(soap, _ns1__findRoleMembershipsResponse*) serialize to a stream
class _ns1__findRoleMembershipsResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipal

/// "urn:SecurityServer":removePrincipal is a complexType.
/// class _ns1__removePrincipal operations:
/// - soap_new__ns1__removePrincipal(soap*) allocate
/// - soap_new__ns1__removePrincipal(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipal(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipal(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipal(soap*, _ns1__removePrincipal*) deserialize from a stream
/// - int soap_write__ns1__removePrincipal(soap, _ns1__removePrincipal*) serialize to a stream
class _ns1__removePrincipal
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipalResponse

/// "urn:SecurityServer":removePrincipalResponse is a complexType.
/// class _ns1__removePrincipalResponse operations:
/// - soap_new__ns1__removePrincipalResponse(soap*) allocate
/// - soap_new__ns1__removePrincipalResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipalResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipalResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipalResponse(soap*, _ns1__removePrincipalResponse*) deserialize from a stream
/// - int soap_write__ns1__removePrincipalResponse(soap, _ns1__removePrincipalResponse*) serialize to a stream
class _ns1__removePrincipalResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isValidPrincipalToken

/// "urn:SecurityServer":isValidPrincipalToken is a complexType.
/// class _ns1__isValidPrincipalToken operations:
/// - soap_new__ns1__isValidPrincipalToken(soap*) allocate
/// - soap_new__ns1__isValidPrincipalToken(soap*, int num) allocate array
/// - soap_new_req__ns1__isValidPrincipalToken(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isValidPrincipalToken(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isValidPrincipalToken(soap*, _ns1__isValidPrincipalToken*) deserialize from a stream
/// - int soap_write__ns1__isValidPrincipalToken(soap, _ns1__isValidPrincipalToken*) serialize to a stream
class _ns1__isValidPrincipalToken
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://authentication.integration.crowd.atlassian.com":ArrayOfValidationFactor.
    ns2__ArrayOfValidationFactor*        in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isValidPrincipalTokenResponse

/// "urn:SecurityServer":isValidPrincipalTokenResponse is a complexType.
/// class _ns1__isValidPrincipalTokenResponse operations:
/// - soap_new__ns1__isValidPrincipalTokenResponse(soap*) allocate
/// - soap_new__ns1__isValidPrincipalTokenResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__isValidPrincipalTokenResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isValidPrincipalTokenResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isValidPrincipalTokenResponse(soap*, _ns1__isValidPrincipalTokenResponse*) deserialize from a stream
/// - int soap_write__ns1__isValidPrincipalTokenResponse(soap, _ns1__isValidPrincipalTokenResponse*) serialize to a stream
class _ns1__isValidPrincipalTokenResponse
{ public:
/// Element out of type xs:boolean.
    bool                                 out                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticatePrincipalSimple

/// "urn:SecurityServer":authenticatePrincipalSimple is a complexType.
/// class _ns1__authenticatePrincipalSimple operations:
/// - soap_new__ns1__authenticatePrincipalSimple(soap*) allocate
/// - soap_new__ns1__authenticatePrincipalSimple(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticatePrincipalSimple(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticatePrincipalSimple(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticatePrincipalSimple(soap*, _ns1__authenticatePrincipalSimple*) deserialize from a stream
/// - int soap_write__ns1__authenticatePrincipalSimple(soap, _ns1__authenticatePrincipalSimple*) serialize to a stream
class _ns1__authenticatePrincipalSimple
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticatePrincipalSimpleResponse

/// "urn:SecurityServer":authenticatePrincipalSimpleResponse is a complexType.
/// class _ns1__authenticatePrincipalSimpleResponse operations:
/// - soap_new__ns1__authenticatePrincipalSimpleResponse(soap*) allocate
/// - soap_new__ns1__authenticatePrincipalSimpleResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticatePrincipalSimpleResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticatePrincipalSimpleResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticatePrincipalSimpleResponse(soap*, _ns1__authenticatePrincipalSimpleResponse*) deserialize from a stream
/// - int soap_write__ns1__authenticatePrincipalSimpleResponse(soap, _ns1__authenticatePrincipalSimpleResponse*) serialize to a stream
class _ns1__authenticatePrincipalSimpleResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeRole

/// "urn:SecurityServer":removeRole is a complexType.
/// class _ns1__removeRole operations:
/// - soap_new__ns1__removeRole(soap*) allocate
/// - soap_new__ns1__removeRole(soap*, int num) allocate array
/// - soap_new_req__ns1__removeRole(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeRole(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeRole(soap*, _ns1__removeRole*) deserialize from a stream
/// - int soap_write__ns1__removeRole(soap, _ns1__removeRole*) serialize to a stream
class _ns1__removeRole
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeRoleResponse

/// "urn:SecurityServer":removeRoleResponse is a complexType.
/// class _ns1__removeRoleResponse operations:
/// - soap_new__ns1__removeRoleResponse(soap*) allocate
/// - soap_new__ns1__removeRoleResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removeRoleResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeRoleResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeRoleResponse(soap*, _ns1__removeRoleResponse*) deserialize from a stream
/// - int soap_write__ns1__removeRoleResponse(soap, _ns1__removeRoleResponse*) serialize to a stream
class _ns1__removeRoleResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getCookieInfo

/// "urn:SecurityServer":getCookieInfo is a complexType.
/// class _ns1__getCookieInfo operations:
/// - soap_new__ns1__getCookieInfo(soap*) allocate
/// - soap_new__ns1__getCookieInfo(soap*, int num) allocate array
/// - soap_new_req__ns1__getCookieInfo(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getCookieInfo(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getCookieInfo(soap*, _ns1__getCookieInfo*) deserialize from a stream
/// - int soap_write__ns1__getCookieInfo(soap, _ns1__getCookieInfo*) serialize to a stream
class _ns1__getCookieInfo
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getCookieInfoResponse

/// "urn:SecurityServer":getCookieInfoResponse is a complexType.
/// class _ns1__getCookieInfoResponse operations:
/// - soap_new__ns1__getCookieInfoResponse(soap*) allocate
/// - soap_new__ns1__getCookieInfoResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__getCookieInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getCookieInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getCookieInfoResponse(soap*, _ns1__getCookieInfoResponse*) deserialize from a stream
/// - int soap_write__ns1__getCookieInfoResponse(soap, _ns1__getCookieInfoResponse*) serialize to a stream
class _ns1__getCookieInfoResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPCookieInfo.
    ns3__SOAPCookieInfo*                 out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updatePrincipalAttribute

/// "urn:SecurityServer":updatePrincipalAttribute is a complexType.
/// class _ns1__updatePrincipalAttribute operations:
/// - soap_new__ns1__updatePrincipalAttribute(soap*) allocate
/// - soap_new__ns1__updatePrincipalAttribute(soap*, int num) allocate array
/// - soap_new_req__ns1__updatePrincipalAttribute(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updatePrincipalAttribute(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updatePrincipalAttribute(soap*, _ns1__updatePrincipalAttribute*) deserialize from a stream
/// - int soap_write__ns1__updatePrincipalAttribute(soap, _ns1__updatePrincipalAttribute*) serialize to a stream
class _ns1__updatePrincipalAttribute
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://soap.integration.crowd.atlassian.com":SOAPAttribute.
    ns3__SOAPAttribute*                  in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updatePrincipalAttributeResponse

/// "urn:SecurityServer":updatePrincipalAttributeResponse is a complexType.
/// class _ns1__updatePrincipalAttributeResponse operations:
/// - soap_new__ns1__updatePrincipalAttributeResponse(soap*) allocate
/// - soap_new__ns1__updatePrincipalAttributeResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__updatePrincipalAttributeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updatePrincipalAttributeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updatePrincipalAttributeResponse(soap*, _ns1__updatePrincipalAttributeResponse*) deserialize from a stream
/// - int soap_write__ns1__updatePrincipalAttributeResponse(soap, _ns1__updatePrincipalAttributeResponse*) serialize to a stream
class _ns1__updatePrincipalAttributeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchGroups

/// "urn:SecurityServer":searchGroups is a complexType.
/// class _ns1__searchGroups operations:
/// - soap_new__ns1__searchGroups(soap*) allocate
/// - soap_new__ns1__searchGroups(soap*, int num) allocate array
/// - soap_new_req__ns1__searchGroups(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchGroups(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchGroups(soap*, _ns1__searchGroups*) deserialize from a stream
/// - int soap_write__ns1__searchGroups(soap, _ns1__searchGroups*) serialize to a stream
class _ns1__searchGroups
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":ArrayOfSearchRestriction.
    ns3__ArrayOfSearchRestriction*       in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchGroupsResponse

/// "urn:SecurityServer":searchGroupsResponse is a complexType.
/// class _ns1__searchGroupsResponse operations:
/// - soap_new__ns1__searchGroupsResponse(soap*) allocate
/// - soap_new__ns1__searchGroupsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__searchGroupsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchGroupsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchGroupsResponse(soap*, _ns1__searchGroupsResponse*) deserialize from a stream
/// - int soap_write__ns1__searchGroupsResponse(soap, _ns1__searchGroupsResponse*) serialize to a stream
class _ns1__searchGroupsResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPGroup.
    ns3__ArrayOfSOAPGroup*               out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getCacheTime

/// "urn:SecurityServer":getCacheTime is a complexType.
/// class _ns1__getCacheTime operations:
/// - soap_new__ns1__getCacheTime(soap*) allocate
/// - soap_new__ns1__getCacheTime(soap*, int num) allocate array
/// - soap_new_req__ns1__getCacheTime(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getCacheTime(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getCacheTime(soap*, _ns1__getCacheTime*) deserialize from a stream
/// - int soap_write__ns1__getCacheTime(soap, _ns1__getCacheTime*) serialize to a stream
class _ns1__getCacheTime
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getCacheTimeResponse

/// "urn:SecurityServer":getCacheTimeResponse is a complexType.
/// class _ns1__getCacheTimeResponse operations:
/// - soap_new__ns1__getCacheTimeResponse(soap*) allocate
/// - soap_new__ns1__getCacheTimeResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__getCacheTimeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getCacheTimeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getCacheTimeResponse(soap*, _ns1__getCacheTimeResponse*) deserialize from a stream
/// - int soap_write__ns1__getCacheTimeResponse(soap, _ns1__getCacheTimeResponse*) serialize to a stream
class _ns1__getCacheTimeResponse
{ public:
/// Element out of type xs:long.
    LONG64                               out                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isRoleMember

/// "urn:SecurityServer":isRoleMember is a complexType.
/// class _ns1__isRoleMember operations:
/// - soap_new__ns1__isRoleMember(soap*) allocate
/// - soap_new__ns1__isRoleMember(soap*, int num) allocate array
/// - soap_new_req__ns1__isRoleMember(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isRoleMember(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isRoleMember(soap*, _ns1__isRoleMember*) deserialize from a stream
/// - int soap_write__ns1__isRoleMember(soap, _ns1__isRoleMember*) serialize to a stream
class _ns1__isRoleMember
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isRoleMemberResponse

/// "urn:SecurityServer":isRoleMemberResponse is a complexType.
/// class _ns1__isRoleMemberResponse operations:
/// - soap_new__ns1__isRoleMemberResponse(soap*) allocate
/// - soap_new__ns1__isRoleMemberResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__isRoleMemberResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isRoleMemberResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isRoleMemberResponse(soap*, _ns1__isRoleMemberResponse*) deserialize from a stream
/// - int soap_write__ns1__isRoleMemberResponse(soap, _ns1__isRoleMemberResponse*) serialize to a stream
class _ns1__isRoleMemberResponse
{ public:
/// Element out of type xs:boolean.
    bool                                 out                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updateGroup

/// "urn:SecurityServer":updateGroup is a complexType.
/// class _ns1__updateGroup operations:
/// - soap_new__ns1__updateGroup(soap*) allocate
/// - soap_new__ns1__updateGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__updateGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updateGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updateGroup(soap*, _ns1__updateGroup*) deserialize from a stream
/// - int soap_write__ns1__updateGroup(soap, _ns1__updateGroup*) serialize to a stream
class _ns1__updateGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// Element in3 of type xs:boolean.
    bool                                 in3                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updateGroupResponse

/// "urn:SecurityServer":updateGroupResponse is a complexType.
/// class _ns1__updateGroupResponse operations:
/// - soap_new__ns1__updateGroupResponse(soap*) allocate
/// - soap_new__ns1__updateGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__updateGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updateGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updateGroupResponse(soap*, _ns1__updateGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__updateGroupResponse(soap, _ns1__updateGroupResponse*) serialize to a stream
class _ns1__updateGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAttributeToGroup

/// "urn:SecurityServer":addAttributeToGroup is a complexType.
/// class _ns1__addAttributeToGroup operations:
/// - soap_new__ns1__addAttributeToGroup(soap*) allocate
/// - soap_new__ns1__addAttributeToGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__addAttributeToGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAttributeToGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAttributeToGroup(soap*, _ns1__addAttributeToGroup*) deserialize from a stream
/// - int soap_write__ns1__addAttributeToGroup(soap, _ns1__addAttributeToGroup*) serialize to a stream
class _ns1__addAttributeToGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://soap.integration.crowd.atlassian.com":SOAPAttribute.
    ns3__SOAPAttribute*                  in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAttributeToGroupResponse

/// "urn:SecurityServer":addAttributeToGroupResponse is a complexType.
/// class _ns1__addAttributeToGroupResponse operations:
/// - soap_new__ns1__addAttributeToGroupResponse(soap*) allocate
/// - soap_new__ns1__addAttributeToGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addAttributeToGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAttributeToGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAttributeToGroupResponse(soap*, _ns1__addAttributeToGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__addAttributeToGroupResponse(soap, _ns1__addAttributeToGroupResponse*) serialize to a stream
class _ns1__addAttributeToGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllRoleNames

/// "urn:SecurityServer":findAllRoleNames is a complexType.
/// class _ns1__findAllRoleNames operations:
/// - soap_new__ns1__findAllRoleNames(soap*) allocate
/// - soap_new__ns1__findAllRoleNames(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllRoleNames(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllRoleNames(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllRoleNames(soap*, _ns1__findAllRoleNames*) deserialize from a stream
/// - int soap_write__ns1__findAllRoleNames(soap, _ns1__findAllRoleNames*) serialize to a stream
class _ns1__findAllRoleNames
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllRoleNamesResponse

/// "urn:SecurityServer":findAllRoleNamesResponse is a complexType.
/// class _ns1__findAllRoleNamesResponse operations:
/// - soap_new__ns1__findAllRoleNamesResponse(soap*) allocate
/// - soap_new__ns1__findAllRoleNamesResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllRoleNamesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllRoleNamesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllRoleNamesResponse(soap*, _ns1__findAllRoleNamesResponse*) deserialize from a stream
/// - int soap_write__ns1__findAllRoleNamesResponse(soap, _ns1__findAllRoleNamesResponse*) serialize to a stream
class _ns1__findAllRoleNamesResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findRoleByName

/// "urn:SecurityServer":findRoleByName is a complexType.
/// class _ns1__findRoleByName operations:
/// - soap_new__ns1__findRoleByName(soap*) allocate
/// - soap_new__ns1__findRoleByName(soap*, int num) allocate array
/// - soap_new_req__ns1__findRoleByName(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findRoleByName(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findRoleByName(soap*, _ns1__findRoleByName*) deserialize from a stream
/// - int soap_write__ns1__findRoleByName(soap, _ns1__findRoleByName*) serialize to a stream
class _ns1__findRoleByName
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findRoleByNameResponse

/// "urn:SecurityServer":findRoleByNameResponse is a complexType.
/// class _ns1__findRoleByNameResponse operations:
/// - soap_new__ns1__findRoleByNameResponse(soap*) allocate
/// - soap_new__ns1__findRoleByNameResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findRoleByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findRoleByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findRoleByNameResponse(soap*, _ns1__findRoleByNameResponse*) deserialize from a stream
/// - int soap_write__ns1__findRoleByNameResponse(soap, _ns1__findRoleByNameResponse*) serialize to a stream
class _ns1__findRoleByNameResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPRole.
    ns3__SOAPRole*                       out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isCacheEnabled

/// "urn:SecurityServer":isCacheEnabled is a complexType.
/// class _ns1__isCacheEnabled operations:
/// - soap_new__ns1__isCacheEnabled(soap*) allocate
/// - soap_new__ns1__isCacheEnabled(soap*, int num) allocate array
/// - soap_new_req__ns1__isCacheEnabled(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isCacheEnabled(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isCacheEnabled(soap*, _ns1__isCacheEnabled*) deserialize from a stream
/// - int soap_write__ns1__isCacheEnabled(soap, _ns1__isCacheEnabled*) serialize to a stream
class _ns1__isCacheEnabled
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isCacheEnabledResponse

/// "urn:SecurityServer":isCacheEnabledResponse is a complexType.
/// class _ns1__isCacheEnabledResponse operations:
/// - soap_new__ns1__isCacheEnabledResponse(soap*) allocate
/// - soap_new__ns1__isCacheEnabledResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__isCacheEnabledResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isCacheEnabledResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isCacheEnabledResponse(soap*, _ns1__isCacheEnabledResponse*) deserialize from a stream
/// - int soap_write__ns1__isCacheEnabledResponse(soap, _ns1__isCacheEnabledResponse*) serialize to a stream
class _ns1__isCacheEnabledResponse
{ public:
/// Element out of type xs:boolean.
    bool                                 out                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupByName

/// "urn:SecurityServer":findGroupByName is a complexType.
/// class _ns1__findGroupByName operations:
/// - soap_new__ns1__findGroupByName(soap*) allocate
/// - soap_new__ns1__findGroupByName(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupByName(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupByName(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupByName(soap*, _ns1__findGroupByName*) deserialize from a stream
/// - int soap_write__ns1__findGroupByName(soap, _ns1__findGroupByName*) serialize to a stream
class _ns1__findGroupByName
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupByNameResponse

/// "urn:SecurityServer":findGroupByNameResponse is a complexType.
/// class _ns1__findGroupByNameResponse operations:
/// - soap_new__ns1__findGroupByNameResponse(soap*) allocate
/// - soap_new__ns1__findGroupByNameResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupByNameResponse(soap*, _ns1__findGroupByNameResponse*) deserialize from a stream
/// - int soap_write__ns1__findGroupByNameResponse(soap, _ns1__findGroupByNameResponse*) serialize to a stream
class _ns1__findGroupByNameResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPGroup.
    ns3__SOAPGroup*                      out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupWithAttributesByName

/// "urn:SecurityServer":findGroupWithAttributesByName is a complexType.
/// class _ns1__findGroupWithAttributesByName operations:
/// - soap_new__ns1__findGroupWithAttributesByName(soap*) allocate
/// - soap_new__ns1__findGroupWithAttributesByName(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupWithAttributesByName(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupWithAttributesByName(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupWithAttributesByName(soap*, _ns1__findGroupWithAttributesByName*) deserialize from a stream
/// - int soap_write__ns1__findGroupWithAttributesByName(soap, _ns1__findGroupWithAttributesByName*) serialize to a stream
class _ns1__findGroupWithAttributesByName
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupWithAttributesByNameResponse

/// "urn:SecurityServer":findGroupWithAttributesByNameResponse is a complexType.
/// class _ns1__findGroupWithAttributesByNameResponse operations:
/// - soap_new__ns1__findGroupWithAttributesByNameResponse(soap*) allocate
/// - soap_new__ns1__findGroupWithAttributesByNameResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupWithAttributesByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupWithAttributesByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupWithAttributesByNameResponse(soap*, _ns1__findGroupWithAttributesByNameResponse*) deserialize from a stream
/// - int soap_write__ns1__findGroupWithAttributesByNameResponse(soap, _ns1__findGroupWithAttributesByNameResponse*) serialize to a stream
class _ns1__findGroupWithAttributesByNameResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPGroup.
    ns3__SOAPGroup*                      out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipalFromRole

/// "urn:SecurityServer":removePrincipalFromRole is a complexType.
/// class _ns1__removePrincipalFromRole operations:
/// - soap_new__ns1__removePrincipalFromRole(soap*) allocate
/// - soap_new__ns1__removePrincipalFromRole(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipalFromRole(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipalFromRole(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipalFromRole(soap*, _ns1__removePrincipalFromRole*) deserialize from a stream
/// - int soap_write__ns1__removePrincipalFromRole(soap, _ns1__removePrincipalFromRole*) serialize to a stream
class _ns1__removePrincipalFromRole
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipalFromRoleResponse

/// "urn:SecurityServer":removePrincipalFromRoleResponse is a complexType.
/// class _ns1__removePrincipalFromRoleResponse operations:
/// - soap_new__ns1__removePrincipalFromRoleResponse(soap*) allocate
/// - soap_new__ns1__removePrincipalFromRoleResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipalFromRoleResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipalFromRoleResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipalFromRoleResponse(soap*, _ns1__removePrincipalFromRoleResponse*) deserialize from a stream
/// - int soap_write__ns1__removePrincipalFromRoleResponse(soap, _ns1__removePrincipalFromRoleResponse*) serialize to a stream
class _ns1__removePrincipalFromRoleResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalWithAttributesByName

/// "urn:SecurityServer":findPrincipalWithAttributesByName is a complexType.
/// class _ns1__findPrincipalWithAttributesByName operations:
/// - soap_new__ns1__findPrincipalWithAttributesByName(soap*) allocate
/// - soap_new__ns1__findPrincipalWithAttributesByName(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalWithAttributesByName(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalWithAttributesByName(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalWithAttributesByName(soap*, _ns1__findPrincipalWithAttributesByName*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalWithAttributesByName(soap, _ns1__findPrincipalWithAttributesByName*) serialize to a stream
class _ns1__findPrincipalWithAttributesByName
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalWithAttributesByNameResponse

/// "urn:SecurityServer":findPrincipalWithAttributesByNameResponse is a complexType.
/// class _ns1__findPrincipalWithAttributesByNameResponse operations:
/// - soap_new__ns1__findPrincipalWithAttributesByNameResponse(soap*) allocate
/// - soap_new__ns1__findPrincipalWithAttributesByNameResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalWithAttributesByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalWithAttributesByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalWithAttributesByNameResponse(soap*, _ns1__findPrincipalWithAttributesByNameResponse*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalWithAttributesByNameResponse(soap, _ns1__findPrincipalWithAttributesByNameResponse*) serialize to a stream
class _ns1__findPrincipalWithAttributesByNameResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticatePrincipal

/// "urn:SecurityServer":authenticatePrincipal is a complexType.
/// class _ns1__authenticatePrincipal operations:
/// - soap_new__ns1__authenticatePrincipal(soap*) allocate
/// - soap_new__ns1__authenticatePrincipal(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticatePrincipal(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticatePrincipal(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticatePrincipal(soap*, _ns1__authenticatePrincipal*) deserialize from a stream
/// - int soap_write__ns1__authenticatePrincipal(soap, _ns1__authenticatePrincipal*) serialize to a stream
class _ns1__authenticatePrincipal
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://authentication.integration.crowd.atlassian.com":UserAuthenticationContext.
    ns2__UserAuthenticationContext*      in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticatePrincipalResponse

/// "urn:SecurityServer":authenticatePrincipalResponse is a complexType.
/// class _ns1__authenticatePrincipalResponse operations:
/// - soap_new__ns1__authenticatePrincipalResponse(soap*) allocate
/// - soap_new__ns1__authenticatePrincipalResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticatePrincipalResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticatePrincipalResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticatePrincipalResponse(soap*, _ns1__authenticatePrincipalResponse*) deserialize from a stream
/// - int soap_write__ns1__authenticatePrincipalResponse(soap, _ns1__authenticatePrincipalResponse*) serialize to a stream
class _ns1__authenticatePrincipalResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupMemberships

/// "urn:SecurityServer":findGroupMemberships is a complexType.
/// class _ns1__findGroupMemberships operations:
/// - soap_new__ns1__findGroupMemberships(soap*) allocate
/// - soap_new__ns1__findGroupMemberships(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupMemberships(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupMemberships(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupMemberships(soap*, _ns1__findGroupMemberships*) deserialize from a stream
/// - int soap_write__ns1__findGroupMemberships(soap, _ns1__findGroupMemberships*) serialize to a stream
class _ns1__findGroupMemberships
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findGroupMembershipsResponse

/// "urn:SecurityServer":findGroupMembershipsResponse is a complexType.
/// class _ns1__findGroupMembershipsResponse operations:
/// - soap_new__ns1__findGroupMembershipsResponse(soap*) allocate
/// - soap_new__ns1__findGroupMembershipsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findGroupMembershipsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findGroupMembershipsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findGroupMembershipsResponse(soap*, _ns1__findGroupMembershipsResponse*) deserialize from a stream
/// - int soap_write__ns1__findGroupMembershipsResponse(soap, _ns1__findGroupMembershipsResponse*) serialize to a stream
class _ns1__findGroupMembershipsResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipalToGroup

/// "urn:SecurityServer":addPrincipalToGroup is a complexType.
/// class _ns1__addPrincipalToGroup operations:
/// - soap_new__ns1__addPrincipalToGroup(soap*) allocate
/// - soap_new__ns1__addPrincipalToGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipalToGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipalToGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipalToGroup(soap*, _ns1__addPrincipalToGroup*) deserialize from a stream
/// - int soap_write__ns1__addPrincipalToGroup(soap, _ns1__addPrincipalToGroup*) serialize to a stream
class _ns1__addPrincipalToGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addPrincipalToGroupResponse

/// "urn:SecurityServer":addPrincipalToGroupResponse is a complexType.
/// class _ns1__addPrincipalToGroupResponse operations:
/// - soap_new__ns1__addPrincipalToGroupResponse(soap*) allocate
/// - soap_new__ns1__addPrincipalToGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addPrincipalToGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addPrincipalToGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addPrincipalToGroupResponse(soap*, _ns1__addPrincipalToGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__addPrincipalToGroupResponse(soap, _ns1__addPrincipalToGroupResponse*) serialize to a stream
class _ns1__addPrincipalToGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeGroup

/// "urn:SecurityServer":removeGroup is a complexType.
/// class _ns1__removeGroup operations:
/// - soap_new__ns1__removeGroup(soap*) allocate
/// - soap_new__ns1__removeGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__removeGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeGroup(soap*, _ns1__removeGroup*) deserialize from a stream
/// - int soap_write__ns1__removeGroup(soap, _ns1__removeGroup*) serialize to a stream
class _ns1__removeGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeGroupResponse

/// "urn:SecurityServer":removeGroupResponse is a complexType.
/// class _ns1__removeGroupResponse operations:
/// - soap_new__ns1__removeGroupResponse(soap*) allocate
/// - soap_new__ns1__removeGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removeGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeGroupResponse(soap*, _ns1__removeGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__removeGroupResponse(soap, _ns1__removeGroupResponse*) serialize to a stream
class _ns1__removeGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeAttributeFromGroup

/// "urn:SecurityServer":removeAttributeFromGroup is a complexType.
/// class _ns1__removeAttributeFromGroup operations:
/// - soap_new__ns1__removeAttributeFromGroup(soap*) allocate
/// - soap_new__ns1__removeAttributeFromGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__removeAttributeFromGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeAttributeFromGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeAttributeFromGroup(soap*, _ns1__removeAttributeFromGroup*) deserialize from a stream
/// - int soap_write__ns1__removeAttributeFromGroup(soap, _ns1__removeAttributeFromGroup*) serialize to a stream
class _ns1__removeAttributeFromGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeAttributeFromGroupResponse

/// "urn:SecurityServer":removeAttributeFromGroupResponse is a complexType.
/// class _ns1__removeAttributeFromGroupResponse operations:
/// - soap_new__ns1__removeAttributeFromGroupResponse(soap*) allocate
/// - soap_new__ns1__removeAttributeFromGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removeAttributeFromGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeAttributeFromGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeAttributeFromGroupResponse(soap*, _ns1__removeAttributeFromGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__removeAttributeFromGroupResponse(soap, _ns1__removeAttributeFromGroupResponse*) serialize to a stream
class _ns1__removeAttributeFromGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAllPrincipals

/// "urn:SecurityServer":addAllPrincipals is a complexType.
/// class _ns1__addAllPrincipals operations:
/// - soap_new__ns1__addAllPrincipals(soap*) allocate
/// - soap_new__ns1__addAllPrincipals(soap*, int num) allocate array
/// - soap_new_req__ns1__addAllPrincipals(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAllPrincipals(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAllPrincipals(soap*, _ns1__addAllPrincipals*) deserialize from a stream
/// - int soap_write__ns1__addAllPrincipals(soap, _ns1__addAllPrincipals*) serialize to a stream
class _ns1__addAllPrincipals
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPPrincipalWithCredential.
    ns3__ArrayOfSOAPPrincipalWithCredential*  in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addAllPrincipalsResponse

/// "urn:SecurityServer":addAllPrincipalsResponse is a complexType.
/// class _ns1__addAllPrincipalsResponse operations:
/// - soap_new__ns1__addAllPrincipalsResponse(soap*) allocate
/// - soap_new__ns1__addAllPrincipalsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addAllPrincipalsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addAllPrincipalsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addAllPrincipalsResponse(soap*, _ns1__addAllPrincipalsResponse*) deserialize from a stream
/// - int soap_write__ns1__addAllPrincipalsResponse(soap, _ns1__addAllPrincipalsResponse*) serialize to a stream
class _ns1__addAllPrincipalsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeAttributeFromPrincipal

/// "urn:SecurityServer":removeAttributeFromPrincipal is a complexType.
/// class _ns1__removeAttributeFromPrincipal operations:
/// - soap_new__ns1__removeAttributeFromPrincipal(soap*) allocate
/// - soap_new__ns1__removeAttributeFromPrincipal(soap*, int num) allocate array
/// - soap_new_req__ns1__removeAttributeFromPrincipal(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeAttributeFromPrincipal(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeAttributeFromPrincipal(soap*, _ns1__removeAttributeFromPrincipal*) deserialize from a stream
/// - int soap_write__ns1__removeAttributeFromPrincipal(soap, _ns1__removeAttributeFromPrincipal*) serialize to a stream
class _ns1__removeAttributeFromPrincipal
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removeAttributeFromPrincipalResponse

/// "urn:SecurityServer":removeAttributeFromPrincipalResponse is a complexType.
/// class _ns1__removeAttributeFromPrincipalResponse operations:
/// - soap_new__ns1__removeAttributeFromPrincipalResponse(soap*) allocate
/// - soap_new__ns1__removeAttributeFromPrincipalResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removeAttributeFromPrincipalResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removeAttributeFromPrincipalResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removeAttributeFromPrincipalResponse(soap*, _ns1__removeAttributeFromPrincipalResponse*) deserialize from a stream
/// - int soap_write__ns1__removeAttributeFromPrincipalResponse(soap, _ns1__removeAttributeFromPrincipalResponse*) serialize to a stream
class _ns1__removeAttributeFromPrincipalResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addRole

/// "urn:SecurityServer":addRole is a complexType.
/// class _ns1__addRole operations:
/// - soap_new__ns1__addRole(soap*) allocate
/// - soap_new__ns1__addRole(soap*, int num) allocate array
/// - soap_new_req__ns1__addRole(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addRole(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addRole(soap*, _ns1__addRole*) deserialize from a stream
/// - int soap_write__ns1__addRole(soap, _ns1__addRole*) serialize to a stream
class _ns1__addRole
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":SOAPRole.
    ns3__SOAPRole*                       in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":addRoleResponse

/// "urn:SecurityServer":addRoleResponse is a complexType.
/// class _ns1__addRoleResponse operations:
/// - soap_new__ns1__addRoleResponse(soap*) allocate
/// - soap_new__ns1__addRoleResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__addRoleResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__addRoleResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__addRoleResponse(soap*, _ns1__addRoleResponse*) deserialize from a stream
/// - int soap_write__ns1__addRoleResponse(soap, _ns1__addRoleResponse*) serialize to a stream
class _ns1__addRoleResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPRole.
    ns3__SOAPRole*                       out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllPrincipalNames

/// "urn:SecurityServer":findAllPrincipalNames is a complexType.
/// class _ns1__findAllPrincipalNames operations:
/// - soap_new__ns1__findAllPrincipalNames(soap*) allocate
/// - soap_new__ns1__findAllPrincipalNames(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllPrincipalNames(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllPrincipalNames(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllPrincipalNames(soap*, _ns1__findAllPrincipalNames*) deserialize from a stream
/// - int soap_write__ns1__findAllPrincipalNames(soap, _ns1__findAllPrincipalNames*) serialize to a stream
class _ns1__findAllPrincipalNames
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findAllPrincipalNamesResponse

/// "urn:SecurityServer":findAllPrincipalNamesResponse is a complexType.
/// class _ns1__findAllPrincipalNamesResponse operations:
/// - soap_new__ns1__findAllPrincipalNamesResponse(soap*) allocate
/// - soap_new__ns1__findAllPrincipalNamesResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findAllPrincipalNamesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findAllPrincipalNamesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findAllPrincipalNamesResponse(soap*, _ns1__findAllPrincipalNamesResponse*) deserialize from a stream
/// - int soap_write__ns1__findAllPrincipalNamesResponse(soap, _ns1__findAllPrincipalNamesResponse*) serialize to a stream
class _ns1__findAllPrincipalNamesResponse
{ public:
/// Element out of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":createPrincipalToken

/// "urn:SecurityServer":createPrincipalToken is a complexType.
/// class _ns1__createPrincipalToken operations:
/// - soap_new__ns1__createPrincipalToken(soap*) allocate
/// - soap_new__ns1__createPrincipalToken(soap*, int num) allocate array
/// - soap_new_req__ns1__createPrincipalToken(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__createPrincipalToken(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__createPrincipalToken(soap*, _ns1__createPrincipalToken*) deserialize from a stream
/// - int soap_write__ns1__createPrincipalToken(soap, _ns1__createPrincipalToken*) serialize to a stream
class _ns1__createPrincipalToken
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://authentication.integration.crowd.atlassian.com":ArrayOfValidationFactor.
    ns2__ArrayOfValidationFactor*        in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":createPrincipalTokenResponse

/// "urn:SecurityServer":createPrincipalTokenResponse is a complexType.
/// class _ns1__createPrincipalTokenResponse operations:
/// - soap_new__ns1__createPrincipalTokenResponse(soap*) allocate
/// - soap_new__ns1__createPrincipalTokenResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__createPrincipalTokenResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__createPrincipalTokenResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__createPrincipalTokenResponse(soap*, _ns1__createPrincipalTokenResponse*) deserialize from a stream
/// - int soap_write__ns1__createPrincipalTokenResponse(soap, _ns1__createPrincipalTokenResponse*) serialize to a stream
class _ns1__createPrincipalTokenResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchRoles

/// "urn:SecurityServer":searchRoles is a complexType.
/// class _ns1__searchRoles operations:
/// - soap_new__ns1__searchRoles(soap*) allocate
/// - soap_new__ns1__searchRoles(soap*, int num) allocate array
/// - soap_new_req__ns1__searchRoles(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchRoles(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchRoles(soap*, _ns1__searchRoles*) deserialize from a stream
/// - int soap_write__ns1__searchRoles(soap, _ns1__searchRoles*) serialize to a stream
class _ns1__searchRoles
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":ArrayOfSearchRestriction.
    ns3__ArrayOfSearchRestriction*       in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchRolesResponse

/// "urn:SecurityServer":searchRolesResponse is a complexType.
/// class _ns1__searchRolesResponse operations:
/// - soap_new__ns1__searchRolesResponse(soap*) allocate
/// - soap_new__ns1__searchRolesResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__searchRolesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchRolesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchRolesResponse(soap*, _ns1__searchRolesResponse*) deserialize from a stream
/// - int soap_write__ns1__searchRolesResponse(soap, _ns1__searchRolesResponse*) serialize to a stream
class _ns1__searchRolesResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPRole.
    ns3__ArrayOfSOAPRole*                out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipalFromGroup

/// "urn:SecurityServer":removePrincipalFromGroup is a complexType.
/// class _ns1__removePrincipalFromGroup operations:
/// - soap_new__ns1__removePrincipalFromGroup(soap*) allocate
/// - soap_new__ns1__removePrincipalFromGroup(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipalFromGroup(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipalFromGroup(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipalFromGroup(soap*, _ns1__removePrincipalFromGroup*) deserialize from a stream
/// - int soap_write__ns1__removePrincipalFromGroup(soap, _ns1__removePrincipalFromGroup*) serialize to a stream
class _ns1__removePrincipalFromGroup
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":removePrincipalFromGroupResponse

/// "urn:SecurityServer":removePrincipalFromGroupResponse is a complexType.
/// class _ns1__removePrincipalFromGroupResponse operations:
/// - soap_new__ns1__removePrincipalFromGroupResponse(soap*) allocate
/// - soap_new__ns1__removePrincipalFromGroupResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__removePrincipalFromGroupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__removePrincipalFromGroupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__removePrincipalFromGroupResponse(soap*, _ns1__removePrincipalFromGroupResponse*) deserialize from a stream
/// - int soap_write__ns1__removePrincipalFromGroupResponse(soap, _ns1__removePrincipalFromGroupResponse*) serialize to a stream
class _ns1__removePrincipalFromGroupResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalByName

/// "urn:SecurityServer":findPrincipalByName is a complexType.
/// class _ns1__findPrincipalByName operations:
/// - soap_new__ns1__findPrincipalByName(soap*) allocate
/// - soap_new__ns1__findPrincipalByName(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalByName(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalByName(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalByName(soap*, _ns1__findPrincipalByName*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalByName(soap, _ns1__findPrincipalByName*) serialize to a stream
class _ns1__findPrincipalByName
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":findPrincipalByNameResponse

/// "urn:SecurityServer":findPrincipalByNameResponse is a complexType.
/// class _ns1__findPrincipalByNameResponse operations:
/// - soap_new__ns1__findPrincipalByNameResponse(soap*) allocate
/// - soap_new__ns1__findPrincipalByNameResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__findPrincipalByNameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__findPrincipalByNameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__findPrincipalByNameResponse(soap*, _ns1__findPrincipalByNameResponse*) deserialize from a stream
/// - int soap_write__ns1__findPrincipalByNameResponse(soap, _ns1__findPrincipalByNameResponse*) serialize to a stream
class _ns1__findPrincipalByNameResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":resetPrincipalCredential

/// "urn:SecurityServer":resetPrincipalCredential is a complexType.
/// class _ns1__resetPrincipalCredential operations:
/// - soap_new__ns1__resetPrincipalCredential(soap*) allocate
/// - soap_new__ns1__resetPrincipalCredential(soap*, int num) allocate array
/// - soap_new_req__ns1__resetPrincipalCredential(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__resetPrincipalCredential(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__resetPrincipalCredential(soap*, _ns1__resetPrincipalCredential*) deserialize from a stream
/// - int soap_write__ns1__resetPrincipalCredential(soap, _ns1__resetPrincipalCredential*) serialize to a stream
class _ns1__resetPrincipalCredential
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":resetPrincipalCredentialResponse

/// "urn:SecurityServer":resetPrincipalCredentialResponse is a complexType.
/// class _ns1__resetPrincipalCredentialResponse operations:
/// - soap_new__ns1__resetPrincipalCredentialResponse(soap*) allocate
/// - soap_new__ns1__resetPrincipalCredentialResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__resetPrincipalCredentialResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__resetPrincipalCredentialResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__resetPrincipalCredentialResponse(soap*, _ns1__resetPrincipalCredentialResponse*) deserialize from a stream
/// - int soap_write__ns1__resetPrincipalCredentialResponse(soap, _ns1__resetPrincipalCredentialResponse*) serialize to a stream
class _ns1__resetPrincipalCredentialResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updateGroupAttribute

/// "urn:SecurityServer":updateGroupAttribute is a complexType.
/// class _ns1__updateGroupAttribute operations:
/// - soap_new__ns1__updateGroupAttribute(soap*) allocate
/// - soap_new__ns1__updateGroupAttribute(soap*, int num) allocate array
/// - soap_new_req__ns1__updateGroupAttribute(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updateGroupAttribute(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updateGroupAttribute(soap*, _ns1__updateGroupAttribute*) deserialize from a stream
/// - int soap_write__ns1__updateGroupAttribute(soap, _ns1__updateGroupAttribute*) serialize to a stream
class _ns1__updateGroupAttribute
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type "http://soap.integration.crowd.atlassian.com":SOAPAttribute.
    ns3__SOAPAttribute*                  in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":updateGroupAttributeResponse

/// "urn:SecurityServer":updateGroupAttributeResponse is a complexType.
/// class _ns1__updateGroupAttributeResponse operations:
/// - soap_new__ns1__updateGroupAttributeResponse(soap*) allocate
/// - soap_new__ns1__updateGroupAttributeResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__updateGroupAttributeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__updateGroupAttributeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__updateGroupAttributeResponse(soap*, _ns1__updateGroupAttributeResponse*) deserialize from a stream
/// - int soap_write__ns1__updateGroupAttributeResponse(soap, _ns1__updateGroupAttributeResponse*) serialize to a stream
class _ns1__updateGroupAttributeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isGroupMember

/// "urn:SecurityServer":isGroupMember is a complexType.
/// class _ns1__isGroupMember operations:
/// - soap_new__ns1__isGroupMember(soap*) allocate
/// - soap_new__ns1__isGroupMember(soap*, int num) allocate array
/// - soap_new_req__ns1__isGroupMember(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isGroupMember(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isGroupMember(soap*, _ns1__isGroupMember*) deserialize from a stream
/// - int soap_write__ns1__isGroupMember(soap, _ns1__isGroupMember*) serialize to a stream
class _ns1__isGroupMember
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type xs:string.
    std::string*                         in1                            1;	///< Nillable pointer.
/// Element in2 of type xs:string.
    std::string*                         in2                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":isGroupMemberResponse

/// "urn:SecurityServer":isGroupMemberResponse is a complexType.
/// class _ns1__isGroupMemberResponse operations:
/// - soap_new__ns1__isGroupMemberResponse(soap*) allocate
/// - soap_new__ns1__isGroupMemberResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__isGroupMemberResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__isGroupMemberResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__isGroupMemberResponse(soap*, _ns1__isGroupMemberResponse*) deserialize from a stream
/// - int soap_write__ns1__isGroupMemberResponse(soap, _ns1__isGroupMemberResponse*) serialize to a stream
class _ns1__isGroupMemberResponse
{ public:
/// Element out of type xs:boolean.
    bool                                 out                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchPrincipals

/// "urn:SecurityServer":searchPrincipals is a complexType.
/// class _ns1__searchPrincipals operations:
/// - soap_new__ns1__searchPrincipals(soap*) allocate
/// - soap_new__ns1__searchPrincipals(soap*, int num) allocate array
/// - soap_new_req__ns1__searchPrincipals(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchPrincipals(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchPrincipals(soap*, _ns1__searchPrincipals*) deserialize from a stream
/// - int soap_write__ns1__searchPrincipals(soap, _ns1__searchPrincipals*) serialize to a stream
class _ns1__searchPrincipals
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// Element in1 of type "http://soap.integration.crowd.atlassian.com":ArrayOfSearchRestriction.
    ns3__ArrayOfSearchRestriction*       in1                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":searchPrincipalsResponse

/// "urn:SecurityServer":searchPrincipalsResponse is a complexType.
/// class _ns1__searchPrincipalsResponse operations:
/// - soap_new__ns1__searchPrincipalsResponse(soap*) allocate
/// - soap_new__ns1__searchPrincipalsResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__searchPrincipalsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__searchPrincipalsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__searchPrincipalsResponse(soap*, _ns1__searchPrincipalsResponse*) deserialize from a stream
/// - int soap_write__ns1__searchPrincipalsResponse(soap, _ns1__searchPrincipalsResponse*) serialize to a stream
class _ns1__searchPrincipalsResponse
{ public:
/// Element out of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPPrincipal.
    ns3__ArrayOfSOAPPrincipal*           out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getDomain

/// "urn:SecurityServer":getDomain is a complexType.
/// class _ns1__getDomain operations:
/// - soap_new__ns1__getDomain(soap*) allocate
/// - soap_new__ns1__getDomain(soap*, int num) allocate array
/// - soap_new_req__ns1__getDomain(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getDomain(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getDomain(soap*, _ns1__getDomain*) deserialize from a stream
/// - int soap_write__ns1__getDomain(soap, _ns1__getDomain*) serialize to a stream
class _ns1__getDomain
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":getDomainResponse

/// "urn:SecurityServer":getDomainResponse is a complexType.
/// class _ns1__getDomainResponse operations:
/// - soap_new__ns1__getDomainResponse(soap*) allocate
/// - soap_new__ns1__getDomainResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__getDomainResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__getDomainResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__getDomainResponse(soap*, _ns1__getDomainResponse*) deserialize from a stream
/// - int soap_write__ns1__getDomainResponse(soap, _ns1__getDomainResponse*) serialize to a stream
class _ns1__getDomainResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticateApplication

/// "urn:SecurityServer":authenticateApplication is a complexType.
/// class _ns1__authenticateApplication operations:
/// - soap_new__ns1__authenticateApplication(soap*) allocate
/// - soap_new__ns1__authenticateApplication(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticateApplication(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticateApplication(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticateApplication(soap*, _ns1__authenticateApplication*) deserialize from a stream
/// - int soap_write__ns1__authenticateApplication(soap, _ns1__authenticateApplication*) serialize to a stream
class _ns1__authenticateApplication
{ public:
/// Element in0 of type "http://authentication.integration.crowd.atlassian.com":ApplicationAuthenticationContext.
    ns2__ApplicationAuthenticationContext*  in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "urn:SecurityServer":authenticateApplicationResponse

/// "urn:SecurityServer":authenticateApplicationResponse is a complexType.
/// class _ns1__authenticateApplicationResponse operations:
/// - soap_new__ns1__authenticateApplicationResponse(soap*) allocate
/// - soap_new__ns1__authenticateApplicationResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__authenticateApplicationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__authenticateApplicationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__authenticateApplicationResponse(soap*, _ns1__authenticateApplicationResponse*) deserialize from a stream
/// - int soap_write__ns1__authenticateApplicationResponse(soap, _ns1__authenticateApplicationResponse*) serialize to a stream
class _ns1__authenticateApplicationResponse
{ public:
/// Element out of type "http://authentication.integration.crowd.atlassian.com":AuthenticatedToken.
    ns2__AuthenticatedToken*             out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://soap.integration.crowd.atlassian.com                              *
 *                                                                            *
\******************************************************************************/


/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPNestableGroup is a complexType.
/// class ns3__ArrayOfSOAPNestableGroup operations:
/// - soap_new_ns3__ArrayOfSOAPNestableGroup(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPNestableGroup(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPNestableGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPNestableGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPNestableGroup(soap*, ns3__ArrayOfSOAPNestableGroup*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPNestableGroup(soap, ns3__ArrayOfSOAPNestableGroup*) serialize to a stream
class ns3__ArrayOfSOAPNestableGroup
{ public:
/// Vector of ns3__SOAPNestableGroup* with length 0..unbounded
    std::vector<ns3__SOAPNestableGroup*> SOAPNestableGroup              0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPNestableGroup is a complexType.
/// class ns3__SOAPNestableGroup operations:
/// - soap_new_ns3__SOAPNestableGroup(soap*) allocate
/// - soap_new_ns3__SOAPNestableGroup(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPNestableGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPNestableGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPNestableGroup(soap*, ns3__SOAPNestableGroup*) deserialize from a stream
/// - int soap_write_ns3__SOAPNestableGroup(soap, ns3__SOAPNestableGroup*) serialize to a stream
class ns3__SOAPNestableGroup
{ public:
/// Element ID of type xs:long.
    LONG64*                              ID                             0;	///< Optional element.
/// Element active of type xs:boolean.
    bool*                                active                         0;	///< Optional element.
/// Element attributes of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPAttribute.
    ns3__ArrayOfSOAPAttribute*           attributes                     0;	///< Nillable pointer.
/// Element conception of type xs:dateTime.
    time_t*                              conception                     0;	///< Optional element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Nillable pointer.
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Optional element.
/// Element groupMembers of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  groupMembers                   0;	///< Nillable pointer.
/// Element lastModified of type xs:dateTime.
    time_t*                              lastModified                   0;	///< Optional element.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPAttribute is a complexType.
/// class ns3__ArrayOfSOAPAttribute operations:
/// - soap_new_ns3__ArrayOfSOAPAttribute(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPAttribute(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPAttribute(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPAttribute(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPAttribute(soap*, ns3__ArrayOfSOAPAttribute*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPAttribute(soap, ns3__ArrayOfSOAPAttribute*) serialize to a stream
class ns3__ArrayOfSOAPAttribute
{ public:
/// Vector of ns3__SOAPAttribute* with length 0..unbounded
    std::vector<ns3__SOAPAttribute*    > SOAPAttribute                  0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPAttribute is a complexType.
/// class ns3__SOAPAttribute operations:
/// - soap_new_ns3__SOAPAttribute(soap*) allocate
/// - soap_new_ns3__SOAPAttribute(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPAttribute(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPAttribute(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPAttribute(soap*, ns3__SOAPAttribute*) deserialize from a stream
/// - int soap_write_ns3__SOAPAttribute(soap, ns3__SOAPAttribute*) serialize to a stream
class ns3__SOAPAttribute
{ public:
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element values of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  values                         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPGroup is a complexType.
/// class ns3__SOAPGroup operations:
/// - soap_new_ns3__SOAPGroup(soap*) allocate
/// - soap_new_ns3__SOAPGroup(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPGroup(soap*, ns3__SOAPGroup*) deserialize from a stream
/// - int soap_write_ns3__SOAPGroup(soap, ns3__SOAPGroup*) serialize to a stream
class ns3__SOAPGroup
{ public:
/// Element ID of type xs:long.
    LONG64*                              ID                             0;	///< Optional element.
/// Element active of type xs:boolean.
    bool*                                active                         0;	///< Optional element.
/// Element attributes of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPAttribute.
    ns3__ArrayOfSOAPAttribute*           attributes                     0;	///< Nillable pointer.
/// Element conception of type xs:dateTime.
    time_t*                              conception                     0;	///< Optional element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Nillable pointer.
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Optional element.
/// Element lastModified of type xs:dateTime.
    time_t*                              lastModified                   0;	///< Optional element.
/// Element members of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  members                        0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPPrincipal is a complexType.
/// class ns3__SOAPPrincipal operations:
/// - soap_new_ns3__SOAPPrincipal(soap*) allocate
/// - soap_new_ns3__SOAPPrincipal(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPPrincipal(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPPrincipal(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPPrincipal(soap*, ns3__SOAPPrincipal*) deserialize from a stream
/// - int soap_write_ns3__SOAPPrincipal(soap, ns3__SOAPPrincipal*) serialize to a stream
class ns3__SOAPPrincipal
{ public:
/// Element ID of type xs:long.
    LONG64*                              ID                             0;	///< Optional element.
/// Element active of type xs:boolean.
    bool*                                active                         0;	///< Optional element.
/// Element attributes of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPAttribute.
    ns3__ArrayOfSOAPAttribute*           attributes                     0;	///< Nillable pointer.
/// Element conception of type xs:dateTime.
    time_t*                              conception                     0;	///< Optional element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Nillable pointer.
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Optional element.
/// Element lastModified of type xs:dateTime.
    time_t*                              lastModified                   0;	///< Optional element.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPCookieInfo is a complexType.
/// class ns3__SOAPCookieInfo operations:
/// - soap_new_ns3__SOAPCookieInfo(soap*) allocate
/// - soap_new_ns3__SOAPCookieInfo(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPCookieInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPCookieInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPCookieInfo(soap*, ns3__SOAPCookieInfo*) deserialize from a stream
/// - int soap_write_ns3__SOAPCookieInfo(soap, ns3__SOAPCookieInfo*) serialize to a stream
class ns3__SOAPCookieInfo
{ public:
/// Element domain of type xs:string.
    std::string*                         domain                         0;	///< Nillable pointer.
/// Element secure of type xs:boolean.
    bool*                                secure                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSearchRestriction is a complexType.
/// class ns3__ArrayOfSearchRestriction operations:
/// - soap_new_ns3__ArrayOfSearchRestriction(soap*) allocate
/// - soap_new_ns3__ArrayOfSearchRestriction(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSearchRestriction(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSearchRestriction(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSearchRestriction(soap*, ns3__ArrayOfSearchRestriction*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSearchRestriction(soap, ns3__ArrayOfSearchRestriction*) serialize to a stream
class ns3__ArrayOfSearchRestriction
{ public:
/// Vector of ns3__SearchRestriction* with length 0..unbounded
    std::vector<ns3__SearchRestriction*> SearchRestriction              0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SearchRestriction is a complexType.
/// class ns3__SearchRestriction operations:
/// - soap_new_ns3__SearchRestriction(soap*) allocate
/// - soap_new_ns3__SearchRestriction(soap*, int num) allocate array
/// - soap_new_req_ns3__SearchRestriction(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SearchRestriction(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SearchRestriction(soap*, ns3__SearchRestriction*) deserialize from a stream
/// - int soap_write_ns3__SearchRestriction(soap, ns3__SearchRestriction*) serialize to a stream
class ns3__SearchRestriction
{ public:
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element value of type xs:string.
    std::string*                         value                          0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPGroup is a complexType.
/// class ns3__ArrayOfSOAPGroup operations:
/// - soap_new_ns3__ArrayOfSOAPGroup(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPGroup(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPGroup(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPGroup(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPGroup(soap*, ns3__ArrayOfSOAPGroup*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPGroup(soap, ns3__ArrayOfSOAPGroup*) serialize to a stream
class ns3__ArrayOfSOAPGroup
{ public:
/// Vector of ns3__SOAPGroup* with length 0..unbounded
    std::vector<ns3__SOAPGroup*        > SOAPGroup                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPRole is a complexType.
/// class ns3__SOAPRole operations:
/// - soap_new_ns3__SOAPRole(soap*) allocate
/// - soap_new_ns3__SOAPRole(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPRole(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPRole(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPRole(soap*, ns3__SOAPRole*) deserialize from a stream
/// - int soap_write_ns3__SOAPRole(soap, ns3__SOAPRole*) serialize to a stream
class ns3__SOAPRole
{ public:
/// Element ID of type xs:long.
    LONG64*                              ID                             0;	///< Optional element.
/// Element active of type xs:boolean.
    bool*                                active                         0;	///< Optional element.
/// Element attributes of type "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPAttribute.
    ns3__ArrayOfSOAPAttribute*           attributes                     0;	///< Nillable pointer.
/// Element conception of type xs:dateTime.
    time_t*                              conception                     0;	///< Optional element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Nillable pointer.
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Optional element.
/// Element lastModified of type xs:dateTime.
    time_t*                              lastModified                   0;	///< Optional element.
/// Element members of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  members                        0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPPrincipalWithCredential is a complexType.
/// class ns3__ArrayOfSOAPPrincipalWithCredential operations:
/// - soap_new_ns3__ArrayOfSOAPPrincipalWithCredential(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPPrincipalWithCredential(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPPrincipalWithCredential(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPPrincipalWithCredential(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPPrincipalWithCredential(soap*, ns3__ArrayOfSOAPPrincipalWithCredential*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPPrincipalWithCredential(soap, ns3__ArrayOfSOAPPrincipalWithCredential*) serialize to a stream
class ns3__ArrayOfSOAPPrincipalWithCredential
{ public:
/// Vector of ns3__SOAPPrincipalWithCredential* with length 0..unbounded
    std::vector<ns3__SOAPPrincipalWithCredential*> SOAPPrincipalWithCredential    0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":SOAPPrincipalWithCredential is a complexType.
/// class ns3__SOAPPrincipalWithCredential operations:
/// - soap_new_ns3__SOAPPrincipalWithCredential(soap*) allocate
/// - soap_new_ns3__SOAPPrincipalWithCredential(soap*, int num) allocate array
/// - soap_new_req_ns3__SOAPPrincipalWithCredential(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__SOAPPrincipalWithCredential(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__SOAPPrincipalWithCredential(soap*, ns3__SOAPPrincipalWithCredential*) deserialize from a stream
/// - int soap_write_ns3__SOAPPrincipalWithCredential(soap, ns3__SOAPPrincipalWithCredential*) serialize to a stream
class ns3__SOAPPrincipalWithCredential
{ public:
/// Element passwordCredential of type "http://authentication.integration.crowd.atlassian.com":PasswordCredential.
    ns2__PasswordCredential*             passwordCredential             0;	///< Nillable pointer.
/// Element principal of type "http://soap.integration.crowd.atlassian.com":SOAPPrincipal.
    ns3__SOAPPrincipal*                  principal                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPRole is a complexType.
/// class ns3__ArrayOfSOAPRole operations:
/// - soap_new_ns3__ArrayOfSOAPRole(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPRole(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPRole(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPRole(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPRole(soap*, ns3__ArrayOfSOAPRole*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPRole(soap, ns3__ArrayOfSOAPRole*) serialize to a stream
class ns3__ArrayOfSOAPRole
{ public:
/// Vector of ns3__SOAPRole* with length 0..unbounded
    std::vector<ns3__SOAPRole*         > SOAPRole                       0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://soap.integration.crowd.atlassian.com":ArrayOfSOAPPrincipal is a complexType.
/// class ns3__ArrayOfSOAPPrincipal operations:
/// - soap_new_ns3__ArrayOfSOAPPrincipal(soap*) allocate
/// - soap_new_ns3__ArrayOfSOAPPrincipal(soap*, int num) allocate array
/// - soap_new_req_ns3__ArrayOfSOAPPrincipal(soap*, ...) allocate, set required members
/// - soap_new_set_ns3__ArrayOfSOAPPrincipal(soap*, ...) allocate, set all public members
/// - int soap_read_ns3__ArrayOfSOAPPrincipal(soap*, ns3__ArrayOfSOAPPrincipal*) deserialize from a stream
/// - int soap_write_ns3__ArrayOfSOAPPrincipal(soap, ns3__ArrayOfSOAPPrincipal*) serialize to a stream
class ns3__ArrayOfSOAPPrincipal
{ public:
/// Vector of ns3__SOAPPrincipal* with length 0..unbounded
    std::vector<ns3__SOAPPrincipal*    > SOAPPrincipal                  0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://exception.integration.crowd.atlassian.com                         *
 *                                                                            *
\******************************************************************************/


/// "http://exception.integration.crowd.atlassian.com":InvalidAuthorizationTokenException is a complexType.
/// class ns4__InvalidAuthorizationTokenException operations:
/// - soap_new_ns4__InvalidAuthorizationTokenException(soap*) allocate
/// - soap_new_ns4__InvalidAuthorizationTokenException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidAuthorizationTokenException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidAuthorizationTokenException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidAuthorizationTokenException(soap*, ns4__InvalidAuthorizationTokenException*) deserialize from a stream
/// - int soap_write_ns4__InvalidAuthorizationTokenException(soap, ns4__InvalidAuthorizationTokenException*) serialize to a stream
class ns4__InvalidAuthorizationTokenException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidGroupException is a complexType.
/// class ns4__InvalidGroupException operations:
/// - soap_new_ns4__InvalidGroupException(soap*) allocate
/// - soap_new_ns4__InvalidGroupException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidGroupException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidGroupException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidGroupException(soap*, ns4__InvalidGroupException*) deserialize from a stream
/// - int soap_write_ns4__InvalidGroupException(soap, ns4__InvalidGroupException*) serialize to a stream
class ns4__InvalidGroupException
{ public:
/// Element entity of type "http://model.integration.crowd.atlassian.com":DirectoryEntity.
    ns7__DirectoryEntity*                entity                         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":ApplicationPermissionException is a complexType.
/// class ns4__ApplicationPermissionException operations:
/// - soap_new_ns4__ApplicationPermissionException(soap*) allocate
/// - soap_new_ns4__ApplicationPermissionException(soap*, int num) allocate array
/// - soap_new_req_ns4__ApplicationPermissionException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__ApplicationPermissionException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__ApplicationPermissionException(soap*, ns4__ApplicationPermissionException*) deserialize from a stream
/// - int soap_write_ns4__ApplicationPermissionException(soap, ns4__ApplicationPermissionException*) serialize to a stream
class ns4__ApplicationPermissionException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":ObjectNotFoundException is a complexType.
/// class ns4__ObjectNotFoundException operations:
/// - soap_new_ns4__ObjectNotFoundException(soap*) allocate
/// - soap_new_ns4__ObjectNotFoundException(soap*, int num) allocate array
/// - soap_new_req_ns4__ObjectNotFoundException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__ObjectNotFoundException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__ObjectNotFoundException(soap*, ns4__ObjectNotFoundException*) deserialize from a stream
/// - int soap_write_ns4__ObjectNotFoundException(soap, ns4__ObjectNotFoundException*) serialize to a stream
class ns4__ObjectNotFoundException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidTokenException is a complexType.
/// class ns4__InvalidTokenException operations:
/// - soap_new_ns4__InvalidTokenException(soap*) allocate
/// - soap_new_ns4__InvalidTokenException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidTokenException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidTokenException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidTokenException(soap*, ns4__InvalidTokenException*) deserialize from a stream
/// - int soap_write_ns4__InvalidTokenException(soap, ns4__InvalidTokenException*) serialize to a stream
class ns4__InvalidTokenException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidCredentialException is a complexType.
/// class ns4__InvalidCredentialException operations:
/// - soap_new_ns4__InvalidCredentialException(soap*) allocate
/// - soap_new_ns4__InvalidCredentialException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidCredentialException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidCredentialException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidCredentialException(soap*, ns4__InvalidCredentialException*) deserialize from a stream
/// - int soap_write_ns4__InvalidCredentialException(soap, ns4__InvalidCredentialException*) serialize to a stream
class ns4__InvalidCredentialException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidUserException is a complexType.
/// class ns4__InvalidUserException operations:
/// - soap_new_ns4__InvalidUserException(soap*) allocate
/// - soap_new_ns4__InvalidUserException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidUserException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidUserException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidUserException(soap*, ns4__InvalidUserException*) deserialize from a stream
/// - int soap_write_ns4__InvalidUserException(soap, ns4__InvalidUserException*) serialize to a stream
class ns4__InvalidUserException
{ public:
/// Element entity of type "http://model.integration.crowd.atlassian.com":DirectoryEntity.
    ns7__DirectoryEntity*                entity                         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":ApplicationAccessDeniedException is a complexType.
/// class ns4__ApplicationAccessDeniedException operations:
/// - soap_new_ns4__ApplicationAccessDeniedException(soap*) allocate
/// - soap_new_ns4__ApplicationAccessDeniedException(soap*, int num) allocate array
/// - soap_new_req_ns4__ApplicationAccessDeniedException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__ApplicationAccessDeniedException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__ApplicationAccessDeniedException(soap*, ns4__ApplicationAccessDeniedException*) deserialize from a stream
/// - int soap_write_ns4__ApplicationAccessDeniedException(soap, ns4__ApplicationAccessDeniedException*) serialize to a stream
class ns4__ApplicationAccessDeniedException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":ExpiredCredentialException is a complexType.
/// class ns4__ExpiredCredentialException operations:
/// - soap_new_ns4__ExpiredCredentialException(soap*) allocate
/// - soap_new_ns4__ExpiredCredentialException(soap*, int num) allocate array
/// - soap_new_req_ns4__ExpiredCredentialException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__ExpiredCredentialException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__ExpiredCredentialException(soap*, ns4__ExpiredCredentialException*) deserialize from a stream
/// - int soap_write_ns4__ExpiredCredentialException(soap, ns4__ExpiredCredentialException*) serialize to a stream
class ns4__ExpiredCredentialException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidAuthenticationException is a complexType.
/// class ns4__InvalidAuthenticationException operations:
/// - soap_new_ns4__InvalidAuthenticationException(soap*) allocate
/// - soap_new_ns4__InvalidAuthenticationException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidAuthenticationException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidAuthenticationException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidAuthenticationException(soap*, ns4__InvalidAuthenticationException*) deserialize from a stream
/// - int soap_write_ns4__InvalidAuthenticationException(soap, ns4__InvalidAuthenticationException*) serialize to a stream
class ns4__InvalidAuthenticationException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InactiveAccountException is a complexType.
/// class ns4__InactiveAccountException operations:
/// - soap_new_ns4__InactiveAccountException(soap*) allocate
/// - soap_new_ns4__InactiveAccountException(soap*, int num) allocate array
/// - soap_new_req_ns4__InactiveAccountException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InactiveAccountException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InactiveAccountException(soap*, ns4__InactiveAccountException*) deserialize from a stream
/// - int soap_write_ns4__InactiveAccountException(soap, ns4__InactiveAccountException*) serialize to a stream
class ns4__InactiveAccountException
{ public:
/// Element user of type "http://user.model.integration.crowd.atlassian.com":User.
    ns8__User*                           user                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":BulkAddFailedException is a complexType.
/// class ns4__BulkAddFailedException operations:
/// - soap_new_ns4__BulkAddFailedException(soap*) allocate
/// - soap_new_ns4__BulkAddFailedException(soap*, int num) allocate array
/// - soap_new_req_ns4__BulkAddFailedException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__BulkAddFailedException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__BulkAddFailedException(soap*, ns4__BulkAddFailedException*) deserialize from a stream
/// - int soap_write_ns4__BulkAddFailedException(soap, ns4__BulkAddFailedException*) serialize to a stream
class ns4__BulkAddFailedException
{ public:
/// Element existingUsers of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  existingUsers                  0;	///< Nillable pointer.
/// Element failedUsers of type "urn:SecurityServer":ArrayOfString.
    ns1__ArrayOfString*                  failedUsers                    0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidRoleException is a complexType.
/// class ns4__InvalidRoleException operations:
/// - soap_new_ns4__InvalidRoleException(soap*) allocate
/// - soap_new_ns4__InvalidRoleException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidRoleException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidRoleException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidRoleException(soap*, ns4__InvalidRoleException*) deserialize from a stream
/// - int soap_write_ns4__InvalidRoleException(soap, ns4__InvalidRoleException*) serialize to a stream
class ns4__InvalidRoleException
{ public:
/// Element entity of type "http://model.integration.crowd.atlassian.com":DirectoryEntity.
    ns7__DirectoryEntity*                entity                         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://exception.integration.crowd.atlassian.com":InvalidEmailAddressException is a complexType.
/// class ns4__InvalidEmailAddressException operations:
/// - soap_new_ns4__InvalidEmailAddressException(soap*) allocate
/// - soap_new_ns4__InvalidEmailAddressException(soap*, int num) allocate array
/// - soap_new_req_ns4__InvalidEmailAddressException(soap*, ...) allocate, set required members
/// - soap_new_set_ns4__InvalidEmailAddressException(soap*, ...) allocate, set all public members
/// - int soap_read_ns4__InvalidEmailAddressException(soap*, ns4__InvalidEmailAddressException*) deserialize from a stream
/// - int soap_write_ns4__InvalidEmailAddressException(soap, ns4__InvalidEmailAddressException*) serialize to a stream
class ns4__InvalidEmailAddressException
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://rmi.java                                                          *
 *                                                                            *
\******************************************************************************/


/// "http://rmi.java":RemoteException is a complexType.
/// class ns5__RemoteException operations:
/// - soap_new_ns5__RemoteException(soap*) allocate
/// - soap_new_ns5__RemoteException(soap*, int num) allocate array
/// - soap_new_req_ns5__RemoteException(soap*, ...) allocate, set required members
/// - soap_new_set_ns5__RemoteException(soap*, ...) allocate, set all public members
/// - int soap_read_ns5__RemoteException(soap*, ns5__RemoteException*) deserialize from a stream
/// - int soap_write_ns5__RemoteException(soap, ns5__RemoteException*) serialize to a stream
class ns5__RemoteException
{ public:
/// Element cause of type "http://lang.java":Throwable.
    ns6__Throwable*                      cause                          0;	///< Nillable pointer.
/// Element message of type xs:string.
    std::string*                         message                        0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://lang.java                                                         *
 *                                                                            *
\******************************************************************************/


/// "http://lang.java":Throwable is a complexType.
/// class ns6__Throwable operations:
/// - soap_new_ns6__Throwable(soap*) allocate
/// - soap_new_ns6__Throwable(soap*, int num) allocate array
/// - soap_new_req_ns6__Throwable(soap*, ...) allocate, set required members
/// - soap_new_set_ns6__Throwable(soap*, ...) allocate, set all public members
/// - int soap_read_ns6__Throwable(soap*, ns6__Throwable*) deserialize from a stream
/// - int soap_write_ns6__Throwable(soap, ns6__Throwable*) serialize to a stream
class ns6__Throwable
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://model.integration.crowd.atlassian.com                             *
 *                                                                            *
\******************************************************************************/


/// "http://model.integration.crowd.atlassian.com":DirectoryEntity is a complexType.
/// class ns7__DirectoryEntity operations:
/// - soap_new_ns7__DirectoryEntity(soap*) allocate
/// - soap_new_ns7__DirectoryEntity(soap*, int num) allocate array
/// - soap_new_req_ns7__DirectoryEntity(soap*, ...) allocate, set required members
/// - soap_new_set_ns7__DirectoryEntity(soap*, ...) allocate, set all public members
/// - int soap_read_ns7__DirectoryEntity(soap*, ns7__DirectoryEntity*) deserialize from a stream
/// - int soap_write_ns7__DirectoryEntity(soap, ns7__DirectoryEntity*) serialize to a stream
class ns7__DirectoryEntity
{ public:
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://user.model.integration.crowd.atlassian.com                        *
 *                                                                            *
\******************************************************************************/


/// "http://user.model.integration.crowd.atlassian.com":User is a complexType.
/// class ns8__User operations:
/// - soap_new_ns8__User(soap*) allocate
/// - soap_new_ns8__User(soap*, int num) allocate array
/// - soap_new_req_ns8__User(soap*, ...) allocate, set required members
/// - soap_new_set_ns8__User(soap*, ...) allocate, set all public members
/// - int soap_read_ns8__User(soap*, ns8__User*) deserialize from a stream
/// - int soap_write_ns8__User(soap, ns8__User*) serialize to a stream
class ns8__User
{ public:
/// Element active of type xs:boolean.
    bool*                                active                         0;	///< Optional element.
/// Element displayName of type xs:string.
    std::string*                         displayName                    0;	///< Nillable pointer.
/// Element emailAddress of type xs:string.
    std::string*                         emailAddress                   0;	///< Nillable pointer.
/// Element firstName of type xs:string.
    std::string*                         firstName                      0;	///< Nillable pointer.
/// Element iconLocation of type xs:string.
    std::string*                         iconLocation                   0;	///< Nillable pointer.
/// Element lastName of type xs:string.
    std::string*                         lastName                       0;	///< Nillable pointer.
/// Element name of type xs:string.
    std::string*                         name                           0;	///< Nillable pointer.
/// Element directoryId of type xs:long.
    LONG64*                              directoryId                    0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://authentication.integration.crowd.atlassian.com                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://authentication.integration.crowd.atlassian.com                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "urn:SecurityServer":InvalidAuthorizationTokenException of type "http://exception.integration.crowd.atlassian.com":InvalidAuthorizationTokenException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":RemoteException of type "http://rmi.java":RemoteException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidGroupException of type "http://exception.integration.crowd.atlassian.com":InvalidGroupException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":ApplicationPermissionException of type "http://exception.integration.crowd.atlassian.com":ApplicationPermissionException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":ObjectNotFoundException of type "http://exception.integration.crowd.atlassian.com":ObjectNotFoundException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidTokenException of type "http://exception.integration.crowd.atlassian.com":InvalidTokenException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidCredentialException of type "http://exception.integration.crowd.atlassian.com":InvalidCredentialException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidUserException of type "http://exception.integration.crowd.atlassian.com":InvalidUserException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":ApplicationAccessDeniedException of type "http://exception.integration.crowd.atlassian.com":ApplicationAccessDeniedException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":ExpiredCredentialException of type "http://exception.integration.crowd.atlassian.com":ExpiredCredentialException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidAuthenticationException of type "http://exception.integration.crowd.atlassian.com":InvalidAuthenticationException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InactiveAccountException of type "http://exception.integration.crowd.atlassian.com":InactiveAccountException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":BulkAddFailedException of type "http://exception.integration.crowd.atlassian.com":BulkAddFailedException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidRoleException of type "http://exception.integration.crowd.atlassian.com":InvalidRoleException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:SecurityServer":InvalidEmailAddressException of type "http://exception.integration.crowd.atlassian.com":InvalidEmailAddressException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://soap.integration.crowd.atlassian.com                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://soap.integration.crowd.atlassian.com                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://exception.integration.crowd.atlassian.com                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://exception.integration.crowd.atlassian.com                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://rmi.java                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://rmi.java                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://lang.java                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://lang.java                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://model.integration.crowd.atlassian.com                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://model.integration.crowd.atlassian.com                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://user.model.integration.crowd.atlassian.com                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://user.model.integration.crowd.atlassian.com                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:SecurityServer                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	SecurityServerHttpBinding 
//gsoap ns1  service type:	SecurityServerPortType 
//gsoap ns1  service port:	http://cartman.my-ho.st/crowd/services/SecurityServer 
//gsoap ns1  service namespace:	urn:SecurityServer 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref SecurityServerHttpBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page SecurityServerHttpBinding Binding "SecurityServerHttpBinding"

@section SecurityServerHttpBinding_operations Operations of Binding  "SecurityServerHttpBinding"

  - @ref __ns1__findAllGroupRelationships

  - @ref __ns1__addGroup

  - @ref __ns1__addPrincipalToRole

  - @ref __ns1__findPrincipalByToken

  - @ref __ns1__updatePrincipalCredential

  - @ref __ns1__getGrantedAuthorities

  - @ref __ns1__addPrincipal

  - @ref __ns1__addAttributeToPrincipal

  - @ref __ns1__invalidatePrincipalToken

  - @ref __ns1__findAllGroupNames

  - @ref __ns1__findRoleMemberships

  - @ref __ns1__removePrincipal

  - @ref __ns1__isValidPrincipalToken

  - @ref __ns1__authenticatePrincipalSimple

  - @ref __ns1__removeRole

  - @ref __ns1__getCookieInfo

  - @ref __ns1__updatePrincipalAttribute

  - @ref __ns1__searchGroups

  - @ref __ns1__getCacheTime

  - @ref __ns1__isRoleMember

  - @ref __ns1__updateGroup

  - @ref __ns1__addAttributeToGroup

  - @ref __ns1__findAllRoleNames

  - @ref __ns1__findRoleByName

  - @ref __ns1__isCacheEnabled

  - @ref __ns1__findGroupByName

  - @ref __ns1__findGroupWithAttributesByName

  - @ref __ns1__removePrincipalFromRole

  - @ref __ns1__findPrincipalWithAttributesByName

  - @ref __ns1__authenticatePrincipal

  - @ref __ns1__findGroupMemberships

  - @ref __ns1__addPrincipalToGroup

  - @ref __ns1__removeGroup

  - @ref __ns1__removeAttributeFromGroup

  - @ref __ns1__addAllPrincipals

  - @ref __ns1__removeAttributeFromPrincipal

  - @ref __ns1__addRole

  - @ref __ns1__findAllPrincipalNames

  - @ref __ns1__createPrincipalToken

  - @ref __ns1__searchRoles

  - @ref __ns1__removePrincipalFromGroup

  - @ref __ns1__findPrincipalByName

  - @ref __ns1__resetPrincipalCredential

  - @ref __ns1__updateGroupAttribute

  - @ref __ns1__isGroupMember

  - @ref __ns1__searchPrincipals

  - @ref __ns1__getDomain

  - @ref __ns1__authenticateApplication

@section SecurityServerHttpBinding_ports Endpoints of Binding  "SecurityServerHttpBinding"

  - http://cartman.my-ho.st/crowd/services/SecurityServer

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    ns4__ApplicationAccessDeniedException*  ns1__ApplicationAccessDeniedException;
///< SOAP Fault element ""urn:SecurityServer":ApplicationAccessDeniedException" part "ApplicationAccessDeniedException"
    ns4__ApplicationPermissionException*  ns1__ApplicationPermissionException;
///< SOAP Fault element ""urn:SecurityServer":ApplicationPermissionException" part "ApplicationPermissionException"
    ns4__BulkAddFailedException*         ns1__BulkAddFailedException   ;
///< SOAP Fault element ""urn:SecurityServer":BulkAddFailedException" part "BulkAddFailedException"
    ns4__ExpiredCredentialException*     ns1__ExpiredCredentialException;
///< SOAP Fault element ""urn:SecurityServer":ExpiredCredentialException" part "ExpiredCredentialException"
    ns4__InactiveAccountException*       ns1__InactiveAccountException ;
///< SOAP Fault element ""urn:SecurityServer":InactiveAccountException" part "InactiveAccountException"
    ns4__InvalidAuthenticationException*  ns1__InvalidAuthenticationException;
///< SOAP Fault element ""urn:SecurityServer":InvalidAuthenticationException" part "InvalidAuthenticationException"
    ns4__InvalidAuthorizationTokenException*  ns1__InvalidAuthorizationTokenException;
///< SOAP Fault element ""urn:SecurityServer":InvalidAuthorizationTokenException" part "InvalidAuthorizationTokenException"
    ns4__InvalidCredentialException*     ns1__InvalidCredentialException;
///< SOAP Fault element ""urn:SecurityServer":InvalidCredentialException" part "InvalidCredentialException"
    ns4__InvalidEmailAddressException*   ns1__InvalidEmailAddressException;
///< SOAP Fault element ""urn:SecurityServer":InvalidEmailAddressException" part "InvalidEmailAddressException"
    ns4__InvalidGroupException*          ns1__InvalidGroupException    ;
///< SOAP Fault element ""urn:SecurityServer":InvalidGroupException" part "InvalidGroupException"
    ns4__InvalidRoleException*           ns1__InvalidRoleException     ;
///< SOAP Fault element ""urn:SecurityServer":InvalidRoleException" part "InvalidRoleException"
    ns4__InvalidTokenException*          ns1__InvalidTokenException    ;
///< SOAP Fault element ""urn:SecurityServer":InvalidTokenException" part "InvalidTokenException"
    ns4__InvalidUserException*           ns1__InvalidUserException     ;
///< SOAP Fault element ""urn:SecurityServer":InvalidUserException" part "InvalidUserException"
    ns4__ObjectNotFoundException*        ns1__ObjectNotFoundException  ;
///< SOAP Fault element ""urn:SecurityServer":ObjectNotFoundException" part "ObjectNotFoundException"
    ns5__RemoteException*                ns1__RemoteException          ;
///< SOAP Fault element ""urn:SecurityServer":RemoteException" part "RemoteException"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SecurityServerHttpBinding                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findAllGroupRelationships                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findAllGroupRelationships" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findAllGroupRelationshipsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findAllGroupRelationshipsResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findAllGroupRelationships(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findAllGroupRelationships*    ns1__findAllGroupRelationships,
    // output parameters:
    _ns1__findAllGroupRelationshipsResponse* ns1__findAllGroupRelationshipsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findAllGroupRelationships(
    struct soap *soap,
    // input parameters:
    _ns1__findAllGroupRelationships*    ns1__findAllGroupRelationships,
    // output parameters:
    _ns1__findAllGroupRelationshipsResponse* ns1__findAllGroupRelationshipsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findAllGroupRelationships SOAP
//gsoap ns1  service method-style:	findAllGroupRelationships document
//gsoap ns1  service method-encoding:	findAllGroupRelationships literal
//gsoap ns1  service method-action:	findAllGroupRelationships ""
//gsoap ns1  service method-output-action:	findAllGroupRelationships urn:SecurityServer/SecurityServerPortType/findAllGroupRelationshipsResponse
//gsoap ns1  service method-fault:	findAllGroupRelationships ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findAllGroupRelationships ns1__RemoteException
int __ns1__findAllGroupRelationships(
    _ns1__findAllGroupRelationships*    ns1__findAllGroupRelationships,	///< Input parameter
    _ns1__findAllGroupRelationshipsResponse* ns1__findAllGroupRelationshipsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addGroup                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidGroupException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addGroup*                     ns1__addGroup,
    // output parameters:
    _ns1__addGroupResponse*             ns1__addGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addGroup(
    struct soap *soap,
    // input parameters:
    _ns1__addGroup*                     ns1__addGroup,
    // output parameters:
    _ns1__addGroupResponse*             ns1__addGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addGroup SOAP
//gsoap ns1  service method-style:	addGroup document
//gsoap ns1  service method-encoding:	addGroup literal
//gsoap ns1  service method-action:	addGroup ""
//gsoap ns1  service method-output-action:	addGroup urn:SecurityServer/SecurityServerPortType/addGroupResponse
//gsoap ns1  service method-fault:	addGroup ns1__InvalidGroupException
//gsoap ns1  service method-fault:	addGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addGroup ns1__RemoteException
int __ns1__addGroup(
    _ns1__addGroup*                     ns1__addGroup,	///< Input parameter
    _ns1__addGroupResponse*             ns1__addGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addPrincipalToRole                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addPrincipalToRole" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addPrincipalToRoleRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addPrincipalToRoleResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addPrincipalToRole(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addPrincipalToRole*           ns1__addPrincipalToRole,
    // output parameters:
    _ns1__addPrincipalToRoleResponse*   ns1__addPrincipalToRoleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addPrincipalToRole(
    struct soap *soap,
    // input parameters:
    _ns1__addPrincipalToRole*           ns1__addPrincipalToRole,
    // output parameters:
    _ns1__addPrincipalToRoleResponse*   ns1__addPrincipalToRoleResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addPrincipalToRole SOAP
//gsoap ns1  service method-style:	addPrincipalToRole document
//gsoap ns1  service method-encoding:	addPrincipalToRole literal
//gsoap ns1  service method-action:	addPrincipalToRole ""
//gsoap ns1  service method-output-action:	addPrincipalToRole urn:SecurityServer/SecurityServerPortType/addPrincipalToRoleResponse
//gsoap ns1  service method-fault:	addPrincipalToRole ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	addPrincipalToRole ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addPrincipalToRole ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addPrincipalToRole ns1__RemoteException
int __ns1__addPrincipalToRole(
    _ns1__addPrincipalToRole*           ns1__addPrincipalToRole,	///< Input parameter
    _ns1__addPrincipalToRoleResponse*   ns1__addPrincipalToRoleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findPrincipalByToken                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findPrincipalByToken" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findPrincipalByTokenRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findPrincipalByTokenResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findPrincipalByToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findPrincipalByToken*         ns1__findPrincipalByToken,
    // output parameters:
    _ns1__findPrincipalByTokenResponse* ns1__findPrincipalByTokenResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findPrincipalByToken(
    struct soap *soap,
    // input parameters:
    _ns1__findPrincipalByToken*         ns1__findPrincipalByToken,
    // output parameters:
    _ns1__findPrincipalByTokenResponse* ns1__findPrincipalByTokenResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findPrincipalByToken SOAP
//gsoap ns1  service method-style:	findPrincipalByToken document
//gsoap ns1  service method-encoding:	findPrincipalByToken literal
//gsoap ns1  service method-action:	findPrincipalByToken ""
//gsoap ns1  service method-output-action:	findPrincipalByToken urn:SecurityServer/SecurityServerPortType/findPrincipalByTokenResponse
//gsoap ns1  service method-fault:	findPrincipalByToken ns1__InvalidTokenException
//gsoap ns1  service method-fault:	findPrincipalByToken ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findPrincipalByToken ns1__RemoteException
int __ns1__findPrincipalByToken(
    _ns1__findPrincipalByToken*         ns1__findPrincipalByToken,	///< Input parameter
    _ns1__findPrincipalByTokenResponse* ns1__findPrincipalByTokenResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__updatePrincipalCredential                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__updatePrincipalCredential" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/updatePrincipalCredentialRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/updatePrincipalCredentialResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidCredentialException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__updatePrincipalCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__updatePrincipalCredential*    ns1__updatePrincipalCredential,
    // output parameters:
    _ns1__updatePrincipalCredentialResponse* ns1__updatePrincipalCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__updatePrincipalCredential(
    struct soap *soap,
    // input parameters:
    _ns1__updatePrincipalCredential*    ns1__updatePrincipalCredential,
    // output parameters:
    _ns1__updatePrincipalCredentialResponse* ns1__updatePrincipalCredentialResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	updatePrincipalCredential SOAP
//gsoap ns1  service method-style:	updatePrincipalCredential document
//gsoap ns1  service method-encoding:	updatePrincipalCredential literal
//gsoap ns1  service method-action:	updatePrincipalCredential ""
//gsoap ns1  service method-output-action:	updatePrincipalCredential urn:SecurityServer/SecurityServerPortType/updatePrincipalCredentialResponse
//gsoap ns1  service method-fault:	updatePrincipalCredential ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	updatePrincipalCredential ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	updatePrincipalCredential ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	updatePrincipalCredential ns1__InvalidCredentialException
//gsoap ns1  service method-fault:	updatePrincipalCredential ns1__RemoteException
int __ns1__updatePrincipalCredential(
    _ns1__updatePrincipalCredential*    ns1__updatePrincipalCredential,	///< Input parameter
    _ns1__updatePrincipalCredentialResponse* ns1__updatePrincipalCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getGrantedAuthorities                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getGrantedAuthorities" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/getGrantedAuthoritiesRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/getGrantedAuthoritiesResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getGrantedAuthorities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__getGrantedAuthorities*        ns1__getGrantedAuthorities,
    // output parameters:
    _ns1__getGrantedAuthoritiesResponse* ns1__getGrantedAuthoritiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getGrantedAuthorities(
    struct soap *soap,
    // input parameters:
    _ns1__getGrantedAuthorities*        ns1__getGrantedAuthorities,
    // output parameters:
    _ns1__getGrantedAuthoritiesResponse* ns1__getGrantedAuthoritiesResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getGrantedAuthorities SOAP
//gsoap ns1  service method-style:	getGrantedAuthorities document
//gsoap ns1  service method-encoding:	getGrantedAuthorities literal
//gsoap ns1  service method-action:	getGrantedAuthorities ""
//gsoap ns1  service method-output-action:	getGrantedAuthorities urn:SecurityServer/SecurityServerPortType/getGrantedAuthoritiesResponse
//gsoap ns1  service method-fault:	getGrantedAuthorities ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	getGrantedAuthorities ns1__RemoteException
int __ns1__getGrantedAuthorities(
    _ns1__getGrantedAuthorities*        ns1__getGrantedAuthorities,	///< Input parameter
    _ns1__getGrantedAuthoritiesResponse* ns1__getGrantedAuthoritiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addPrincipal                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addPrincipal" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addPrincipalRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addPrincipalResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidUserException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidCredentialException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addPrincipal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addPrincipal*                 ns1__addPrincipal,
    // output parameters:
    _ns1__addPrincipalResponse*         ns1__addPrincipalResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addPrincipal(
    struct soap *soap,
    // input parameters:
    _ns1__addPrincipal*                 ns1__addPrincipal,
    // output parameters:
    _ns1__addPrincipalResponse*         ns1__addPrincipalResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addPrincipal SOAP
//gsoap ns1  service method-style:	addPrincipal document
//gsoap ns1  service method-encoding:	addPrincipal literal
//gsoap ns1  service method-action:	addPrincipal ""
//gsoap ns1  service method-output-action:	addPrincipal urn:SecurityServer/SecurityServerPortType/addPrincipalResponse
//gsoap ns1  service method-fault:	addPrincipal ns1__InvalidUserException
//gsoap ns1  service method-fault:	addPrincipal ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addPrincipal ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addPrincipal ns1__InvalidCredentialException
//gsoap ns1  service method-fault:	addPrincipal ns1__RemoteException
int __ns1__addPrincipal(
    _ns1__addPrincipal*                 ns1__addPrincipal,	///< Input parameter
    _ns1__addPrincipalResponse*         ns1__addPrincipalResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addAttributeToPrincipal                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addAttributeToPrincipal" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addAttributeToPrincipalRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addAttributeToPrincipalResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addAttributeToPrincipal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addAttributeToPrincipal*      ns1__addAttributeToPrincipal,
    // output parameters:
    _ns1__addAttributeToPrincipalResponse* ns1__addAttributeToPrincipalResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addAttributeToPrincipal(
    struct soap *soap,
    // input parameters:
    _ns1__addAttributeToPrincipal*      ns1__addAttributeToPrincipal,
    // output parameters:
    _ns1__addAttributeToPrincipalResponse* ns1__addAttributeToPrincipalResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addAttributeToPrincipal SOAP
//gsoap ns1  service method-style:	addAttributeToPrincipal document
//gsoap ns1  service method-encoding:	addAttributeToPrincipal literal
//gsoap ns1  service method-action:	addAttributeToPrincipal ""
//gsoap ns1  service method-output-action:	addAttributeToPrincipal urn:SecurityServer/SecurityServerPortType/addAttributeToPrincipalResponse
//gsoap ns1  service method-fault:	addAttributeToPrincipal ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	addAttributeToPrincipal ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addAttributeToPrincipal ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addAttributeToPrincipal ns1__RemoteException
int __ns1__addAttributeToPrincipal(
    _ns1__addAttributeToPrincipal*      ns1__addAttributeToPrincipal,	///< Input parameter
    _ns1__addAttributeToPrincipalResponse* ns1__addAttributeToPrincipalResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__invalidatePrincipalToken                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__invalidatePrincipalToken" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/invalidatePrincipalTokenRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/invalidatePrincipalTokenResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__invalidatePrincipalToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__invalidatePrincipalToken*     ns1__invalidatePrincipalToken,
    // output parameters:
    _ns1__invalidatePrincipalTokenResponse* ns1__invalidatePrincipalTokenResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__invalidatePrincipalToken(
    struct soap *soap,
    // input parameters:
    _ns1__invalidatePrincipalToken*     ns1__invalidatePrincipalToken,
    // output parameters:
    _ns1__invalidatePrincipalTokenResponse* ns1__invalidatePrincipalTokenResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	invalidatePrincipalToken SOAP
//gsoap ns1  service method-style:	invalidatePrincipalToken document
//gsoap ns1  service method-encoding:	invalidatePrincipalToken literal
//gsoap ns1  service method-action:	invalidatePrincipalToken ""
//gsoap ns1  service method-output-action:	invalidatePrincipalToken urn:SecurityServer/SecurityServerPortType/invalidatePrincipalTokenResponse
//gsoap ns1  service method-fault:	invalidatePrincipalToken ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	invalidatePrincipalToken ns1__RemoteException
int __ns1__invalidatePrincipalToken(
    _ns1__invalidatePrincipalToken*     ns1__invalidatePrincipalToken,	///< Input parameter
    _ns1__invalidatePrincipalTokenResponse* ns1__invalidatePrincipalTokenResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findAllGroupNames                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findAllGroupNames" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findAllGroupNamesRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findAllGroupNamesResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findAllGroupNames(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findAllGroupNames*            ns1__findAllGroupNames,
    // output parameters:
    _ns1__findAllGroupNamesResponse*    ns1__findAllGroupNamesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findAllGroupNames(
    struct soap *soap,
    // input parameters:
    _ns1__findAllGroupNames*            ns1__findAllGroupNames,
    // output parameters:
    _ns1__findAllGroupNamesResponse*    ns1__findAllGroupNamesResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findAllGroupNames SOAP
//gsoap ns1  service method-style:	findAllGroupNames document
//gsoap ns1  service method-encoding:	findAllGroupNames literal
//gsoap ns1  service method-action:	findAllGroupNames ""
//gsoap ns1  service method-output-action:	findAllGroupNames urn:SecurityServer/SecurityServerPortType/findAllGroupNamesResponse
//gsoap ns1  service method-fault:	findAllGroupNames ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findAllGroupNames ns1__RemoteException
int __ns1__findAllGroupNames(
    _ns1__findAllGroupNames*            ns1__findAllGroupNames,	///< Input parameter
    _ns1__findAllGroupNamesResponse*    ns1__findAllGroupNamesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findRoleMemberships                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findRoleMemberships" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findRoleMembershipsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findRoleMembershipsResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findRoleMemberships(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findRoleMemberships*          ns1__findRoleMemberships,
    // output parameters:
    _ns1__findRoleMembershipsResponse*  ns1__findRoleMembershipsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findRoleMemberships(
    struct soap *soap,
    // input parameters:
    _ns1__findRoleMemberships*          ns1__findRoleMemberships,
    // output parameters:
    _ns1__findRoleMembershipsResponse*  ns1__findRoleMembershipsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findRoleMemberships SOAP
//gsoap ns1  service method-style:	findRoleMemberships document
//gsoap ns1  service method-encoding:	findRoleMemberships literal
//gsoap ns1  service method-action:	findRoleMemberships ""
//gsoap ns1  service method-output-action:	findRoleMemberships urn:SecurityServer/SecurityServerPortType/findRoleMembershipsResponse
//gsoap ns1  service method-fault:	findRoleMemberships ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findRoleMemberships ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findRoleMemberships ns1__RemoteException
int __ns1__findRoleMemberships(
    _ns1__findRoleMemberships*          ns1__findRoleMemberships,	///< Input parameter
    _ns1__findRoleMembershipsResponse*  ns1__findRoleMembershipsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removePrincipal                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removePrincipal" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removePrincipalRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removePrincipalResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removePrincipal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removePrincipal*              ns1__removePrincipal,
    // output parameters:
    _ns1__removePrincipalResponse*      ns1__removePrincipalResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removePrincipal(
    struct soap *soap,
    // input parameters:
    _ns1__removePrincipal*              ns1__removePrincipal,
    // output parameters:
    _ns1__removePrincipalResponse*      ns1__removePrincipalResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removePrincipal SOAP
//gsoap ns1  service method-style:	removePrincipal document
//gsoap ns1  service method-encoding:	removePrincipal literal
//gsoap ns1  service method-action:	removePrincipal ""
//gsoap ns1  service method-output-action:	removePrincipal urn:SecurityServer/SecurityServerPortType/removePrincipalResponse
//gsoap ns1  service method-fault:	removePrincipal ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removePrincipal ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removePrincipal ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removePrincipal ns1__RemoteException
int __ns1__removePrincipal(
    _ns1__removePrincipal*              ns1__removePrincipal,	///< Input parameter
    _ns1__removePrincipalResponse*      ns1__removePrincipalResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__isValidPrincipalToken                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__isValidPrincipalToken" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/isValidPrincipalTokenRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/isValidPrincipalTokenResponse"

  - SOAP Output Fault: "urn:SecurityServer":ApplicationAccessDeniedException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__isValidPrincipalToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__isValidPrincipalToken*        ns1__isValidPrincipalToken,
    // output parameters:
    _ns1__isValidPrincipalTokenResponse* ns1__isValidPrincipalTokenResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__isValidPrincipalToken(
    struct soap *soap,
    // input parameters:
    _ns1__isValidPrincipalToken*        ns1__isValidPrincipalToken,
    // output parameters:
    _ns1__isValidPrincipalTokenResponse* ns1__isValidPrincipalTokenResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	isValidPrincipalToken SOAP
//gsoap ns1  service method-style:	isValidPrincipalToken document
//gsoap ns1  service method-encoding:	isValidPrincipalToken literal
//gsoap ns1  service method-action:	isValidPrincipalToken ""
//gsoap ns1  service method-output-action:	isValidPrincipalToken urn:SecurityServer/SecurityServerPortType/isValidPrincipalTokenResponse
//gsoap ns1  service method-fault:	isValidPrincipalToken ns1__ApplicationAccessDeniedException
//gsoap ns1  service method-fault:	isValidPrincipalToken ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	isValidPrincipalToken ns1__RemoteException
int __ns1__isValidPrincipalToken(
    _ns1__isValidPrincipalToken*        ns1__isValidPrincipalToken,	///< Input parameter
    _ns1__isValidPrincipalTokenResponse* ns1__isValidPrincipalTokenResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__authenticatePrincipalSimple                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__authenticatePrincipalSimple" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/authenticatePrincipalSimpleRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/authenticatePrincipalSimpleResponse"

  - SOAP Output Fault: "urn:SecurityServer":ApplicationAccessDeniedException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ExpiredCredentialException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthenticationException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InactiveAccountException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__authenticatePrincipalSimple(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__authenticatePrincipalSimple*  ns1__authenticatePrincipalSimple,
    // output parameters:
    _ns1__authenticatePrincipalSimpleResponse* ns1__authenticatePrincipalSimpleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__authenticatePrincipalSimple(
    struct soap *soap,
    // input parameters:
    _ns1__authenticatePrincipalSimple*  ns1__authenticatePrincipalSimple,
    // output parameters:
    _ns1__authenticatePrincipalSimpleResponse* ns1__authenticatePrincipalSimpleResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	authenticatePrincipalSimple SOAP
//gsoap ns1  service method-style:	authenticatePrincipalSimple document
//gsoap ns1  service method-encoding:	authenticatePrincipalSimple literal
//gsoap ns1  service method-action:	authenticatePrincipalSimple ""
//gsoap ns1  service method-output-action:	authenticatePrincipalSimple urn:SecurityServer/SecurityServerPortType/authenticatePrincipalSimpleResponse
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__ApplicationAccessDeniedException
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__ExpiredCredentialException
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__InvalidAuthenticationException
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__InactiveAccountException
//gsoap ns1  service method-fault:	authenticatePrincipalSimple ns1__RemoteException
int __ns1__authenticatePrincipalSimple(
    _ns1__authenticatePrincipalSimple*  ns1__authenticatePrincipalSimple,	///< Input parameter
    _ns1__authenticatePrincipalSimpleResponse* ns1__authenticatePrincipalSimpleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removeRole                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removeRole" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removeRoleRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removeRoleResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removeRole(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removeRole*                   ns1__removeRole,
    // output parameters:
    _ns1__removeRoleResponse*           ns1__removeRoleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removeRole(
    struct soap *soap,
    // input parameters:
    _ns1__removeRole*                   ns1__removeRole,
    // output parameters:
    _ns1__removeRoleResponse*           ns1__removeRoleResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removeRole SOAP
//gsoap ns1  service method-style:	removeRole document
//gsoap ns1  service method-encoding:	removeRole literal
//gsoap ns1  service method-action:	removeRole ""
//gsoap ns1  service method-output-action:	removeRole urn:SecurityServer/SecurityServerPortType/removeRoleResponse
//gsoap ns1  service method-fault:	removeRole ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removeRole ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removeRole ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removeRole ns1__RemoteException
int __ns1__removeRole(
    _ns1__removeRole*                   ns1__removeRole,	///< Input parameter
    _ns1__removeRoleResponse*           ns1__removeRoleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getCookieInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getCookieInfo" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/getCookieInfoRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/getCookieInfoResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getCookieInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__getCookieInfo*                ns1__getCookieInfo,
    // output parameters:
    _ns1__getCookieInfoResponse*        ns1__getCookieInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getCookieInfo(
    struct soap *soap,
    // input parameters:
    _ns1__getCookieInfo*                ns1__getCookieInfo,
    // output parameters:
    _ns1__getCookieInfoResponse*        ns1__getCookieInfoResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getCookieInfo SOAP
//gsoap ns1  service method-style:	getCookieInfo document
//gsoap ns1  service method-encoding:	getCookieInfo literal
//gsoap ns1  service method-action:	getCookieInfo ""
//gsoap ns1  service method-output-action:	getCookieInfo urn:SecurityServer/SecurityServerPortType/getCookieInfoResponse
//gsoap ns1  service method-fault:	getCookieInfo ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	getCookieInfo ns1__RemoteException
int __ns1__getCookieInfo(
    _ns1__getCookieInfo*                ns1__getCookieInfo,	///< Input parameter
    _ns1__getCookieInfoResponse*        ns1__getCookieInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__updatePrincipalAttribute                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__updatePrincipalAttribute" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/updatePrincipalAttributeRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/updatePrincipalAttributeResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__updatePrincipalAttribute(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__updatePrincipalAttribute*     ns1__updatePrincipalAttribute,
    // output parameters:
    _ns1__updatePrincipalAttributeResponse* ns1__updatePrincipalAttributeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__updatePrincipalAttribute(
    struct soap *soap,
    // input parameters:
    _ns1__updatePrincipalAttribute*     ns1__updatePrincipalAttribute,
    // output parameters:
    _ns1__updatePrincipalAttributeResponse* ns1__updatePrincipalAttributeResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	updatePrincipalAttribute SOAP
//gsoap ns1  service method-style:	updatePrincipalAttribute document
//gsoap ns1  service method-encoding:	updatePrincipalAttribute literal
//gsoap ns1  service method-action:	updatePrincipalAttribute ""
//gsoap ns1  service method-output-action:	updatePrincipalAttribute urn:SecurityServer/SecurityServerPortType/updatePrincipalAttributeResponse
//gsoap ns1  service method-fault:	updatePrincipalAttribute ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	updatePrincipalAttribute ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	updatePrincipalAttribute ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	updatePrincipalAttribute ns1__RemoteException
int __ns1__updatePrincipalAttribute(
    _ns1__updatePrincipalAttribute*     ns1__updatePrincipalAttribute,	///< Input parameter
    _ns1__updatePrincipalAttributeResponse* ns1__updatePrincipalAttributeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__searchGroups                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__searchGroups" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/searchGroupsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/searchGroupsResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__searchGroups(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__searchGroups*                 ns1__searchGroups,
    // output parameters:
    _ns1__searchGroupsResponse*         ns1__searchGroupsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__searchGroups(
    struct soap *soap,
    // input parameters:
    _ns1__searchGroups*                 ns1__searchGroups,
    // output parameters:
    _ns1__searchGroupsResponse*         ns1__searchGroupsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	searchGroups SOAP
//gsoap ns1  service method-style:	searchGroups document
//gsoap ns1  service method-encoding:	searchGroups literal
//gsoap ns1  service method-action:	searchGroups ""
//gsoap ns1  service method-output-action:	searchGroups urn:SecurityServer/SecurityServerPortType/searchGroupsResponse
//gsoap ns1  service method-fault:	searchGroups ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	searchGroups ns1__RemoteException
int __ns1__searchGroups(
    _ns1__searchGroups*                 ns1__searchGroups,	///< Input parameter
    _ns1__searchGroupsResponse*         ns1__searchGroupsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getCacheTime                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getCacheTime" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/getCacheTimeRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/getCacheTimeResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getCacheTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__getCacheTime*                 ns1__getCacheTime,
    // output parameters:
    _ns1__getCacheTimeResponse*         ns1__getCacheTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getCacheTime(
    struct soap *soap,
    // input parameters:
    _ns1__getCacheTime*                 ns1__getCacheTime,
    // output parameters:
    _ns1__getCacheTimeResponse*         ns1__getCacheTimeResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getCacheTime SOAP
//gsoap ns1  service method-style:	getCacheTime document
//gsoap ns1  service method-encoding:	getCacheTime literal
//gsoap ns1  service method-action:	getCacheTime ""
//gsoap ns1  service method-output-action:	getCacheTime urn:SecurityServer/SecurityServerPortType/getCacheTimeResponse
//gsoap ns1  service method-fault:	getCacheTime ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	getCacheTime ns1__RemoteException
int __ns1__getCacheTime(
    _ns1__getCacheTime*                 ns1__getCacheTime,	///< Input parameter
    _ns1__getCacheTimeResponse*         ns1__getCacheTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__isRoleMember                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__isRoleMember" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/isRoleMemberRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/isRoleMemberResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__isRoleMember(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__isRoleMember*                 ns1__isRoleMember,
    // output parameters:
    _ns1__isRoleMemberResponse*         ns1__isRoleMemberResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__isRoleMember(
    struct soap *soap,
    // input parameters:
    _ns1__isRoleMember*                 ns1__isRoleMember,
    // output parameters:
    _ns1__isRoleMemberResponse*         ns1__isRoleMemberResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	isRoleMember SOAP
//gsoap ns1  service method-style:	isRoleMember document
//gsoap ns1  service method-encoding:	isRoleMember literal
//gsoap ns1  service method-action:	isRoleMember ""
//gsoap ns1  service method-output-action:	isRoleMember urn:SecurityServer/SecurityServerPortType/isRoleMemberResponse
//gsoap ns1  service method-fault:	isRoleMember ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	isRoleMember ns1__RemoteException
int __ns1__isRoleMember(
    _ns1__isRoleMember*                 ns1__isRoleMember,	///< Input parameter
    _ns1__isRoleMemberResponse*         ns1__isRoleMemberResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__updateGroup                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__updateGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/updateGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/updateGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__updateGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__updateGroup*                  ns1__updateGroup,
    // output parameters:
    _ns1__updateGroupResponse*          ns1__updateGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__updateGroup(
    struct soap *soap,
    // input parameters:
    _ns1__updateGroup*                  ns1__updateGroup,
    // output parameters:
    _ns1__updateGroupResponse*          ns1__updateGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	updateGroup SOAP
//gsoap ns1  service method-style:	updateGroup document
//gsoap ns1  service method-encoding:	updateGroup literal
//gsoap ns1  service method-action:	updateGroup ""
//gsoap ns1  service method-output-action:	updateGroup urn:SecurityServer/SecurityServerPortType/updateGroupResponse
//gsoap ns1  service method-fault:	updateGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	updateGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	updateGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	updateGroup ns1__RemoteException
int __ns1__updateGroup(
    _ns1__updateGroup*                  ns1__updateGroup,	///< Input parameter
    _ns1__updateGroupResponse*          ns1__updateGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addAttributeToGroup                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addAttributeToGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addAttributeToGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addAttributeToGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addAttributeToGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addAttributeToGroup*          ns1__addAttributeToGroup,
    // output parameters:
    _ns1__addAttributeToGroupResponse*  ns1__addAttributeToGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addAttributeToGroup(
    struct soap *soap,
    // input parameters:
    _ns1__addAttributeToGroup*          ns1__addAttributeToGroup,
    // output parameters:
    _ns1__addAttributeToGroupResponse*  ns1__addAttributeToGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addAttributeToGroup SOAP
//gsoap ns1  service method-style:	addAttributeToGroup document
//gsoap ns1  service method-encoding:	addAttributeToGroup literal
//gsoap ns1  service method-action:	addAttributeToGroup ""
//gsoap ns1  service method-output-action:	addAttributeToGroup urn:SecurityServer/SecurityServerPortType/addAttributeToGroupResponse
//gsoap ns1  service method-fault:	addAttributeToGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	addAttributeToGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addAttributeToGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addAttributeToGroup ns1__RemoteException
int __ns1__addAttributeToGroup(
    _ns1__addAttributeToGroup*          ns1__addAttributeToGroup,	///< Input parameter
    _ns1__addAttributeToGroupResponse*  ns1__addAttributeToGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findAllRoleNames                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findAllRoleNames" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findAllRoleNamesRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findAllRoleNamesResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findAllRoleNames(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findAllRoleNames*             ns1__findAllRoleNames,
    // output parameters:
    _ns1__findAllRoleNamesResponse*     ns1__findAllRoleNamesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findAllRoleNames(
    struct soap *soap,
    // input parameters:
    _ns1__findAllRoleNames*             ns1__findAllRoleNames,
    // output parameters:
    _ns1__findAllRoleNamesResponse*     ns1__findAllRoleNamesResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findAllRoleNames SOAP
//gsoap ns1  service method-style:	findAllRoleNames document
//gsoap ns1  service method-encoding:	findAllRoleNames literal
//gsoap ns1  service method-action:	findAllRoleNames ""
//gsoap ns1  service method-output-action:	findAllRoleNames urn:SecurityServer/SecurityServerPortType/findAllRoleNamesResponse
//gsoap ns1  service method-fault:	findAllRoleNames ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findAllRoleNames ns1__RemoteException
int __ns1__findAllRoleNames(
    _ns1__findAllRoleNames*             ns1__findAllRoleNames,	///< Input parameter
    _ns1__findAllRoleNamesResponse*     ns1__findAllRoleNamesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findRoleByName                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findRoleByName" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findRoleByNameRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findRoleByNameResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findRoleByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findRoleByName*               ns1__findRoleByName,
    // output parameters:
    _ns1__findRoleByNameResponse*       ns1__findRoleByNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findRoleByName(
    struct soap *soap,
    // input parameters:
    _ns1__findRoleByName*               ns1__findRoleByName,
    // output parameters:
    _ns1__findRoleByNameResponse*       ns1__findRoleByNameResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findRoleByName SOAP
//gsoap ns1  service method-style:	findRoleByName document
//gsoap ns1  service method-encoding:	findRoleByName literal
//gsoap ns1  service method-action:	findRoleByName ""
//gsoap ns1  service method-output-action:	findRoleByName urn:SecurityServer/SecurityServerPortType/findRoleByNameResponse
//gsoap ns1  service method-fault:	findRoleByName ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findRoleByName ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findRoleByName ns1__RemoteException
int __ns1__findRoleByName(
    _ns1__findRoleByName*               ns1__findRoleByName,	///< Input parameter
    _ns1__findRoleByNameResponse*       ns1__findRoleByNameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__isCacheEnabled                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__isCacheEnabled" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/isCacheEnabledRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/isCacheEnabledResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__isCacheEnabled(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__isCacheEnabled*               ns1__isCacheEnabled,
    // output parameters:
    _ns1__isCacheEnabledResponse*       ns1__isCacheEnabledResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__isCacheEnabled(
    struct soap *soap,
    // input parameters:
    _ns1__isCacheEnabled*               ns1__isCacheEnabled,
    // output parameters:
    _ns1__isCacheEnabledResponse*       ns1__isCacheEnabledResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	isCacheEnabled SOAP
//gsoap ns1  service method-style:	isCacheEnabled document
//gsoap ns1  service method-encoding:	isCacheEnabled literal
//gsoap ns1  service method-action:	isCacheEnabled ""
//gsoap ns1  service method-output-action:	isCacheEnabled urn:SecurityServer/SecurityServerPortType/isCacheEnabledResponse
//gsoap ns1  service method-fault:	isCacheEnabled ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	isCacheEnabled ns1__RemoteException
int __ns1__isCacheEnabled(
    _ns1__isCacheEnabled*               ns1__isCacheEnabled,	///< Input parameter
    _ns1__isCacheEnabledResponse*       ns1__isCacheEnabledResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findGroupByName                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findGroupByName" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findGroupByNameRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findGroupByNameResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findGroupByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findGroupByName*              ns1__findGroupByName,
    // output parameters:
    _ns1__findGroupByNameResponse*      ns1__findGroupByNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findGroupByName(
    struct soap *soap,
    // input parameters:
    _ns1__findGroupByName*              ns1__findGroupByName,
    // output parameters:
    _ns1__findGroupByNameResponse*      ns1__findGroupByNameResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findGroupByName SOAP
//gsoap ns1  service method-style:	findGroupByName document
//gsoap ns1  service method-encoding:	findGroupByName literal
//gsoap ns1  service method-action:	findGroupByName ""
//gsoap ns1  service method-output-action:	findGroupByName urn:SecurityServer/SecurityServerPortType/findGroupByNameResponse
//gsoap ns1  service method-fault:	findGroupByName ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findGroupByName ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findGroupByName ns1__RemoteException
int __ns1__findGroupByName(
    _ns1__findGroupByName*              ns1__findGroupByName,	///< Input parameter
    _ns1__findGroupByNameResponse*      ns1__findGroupByNameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findGroupWithAttributesByName                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findGroupWithAttributesByName" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findGroupWithAttributesByNameRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findGroupWithAttributesByNameResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findGroupWithAttributesByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findGroupWithAttributesByName* ns1__findGroupWithAttributesByName,
    // output parameters:
    _ns1__findGroupWithAttributesByNameResponse* ns1__findGroupWithAttributesByNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findGroupWithAttributesByName(
    struct soap *soap,
    // input parameters:
    _ns1__findGroupWithAttributesByName* ns1__findGroupWithAttributesByName,
    // output parameters:
    _ns1__findGroupWithAttributesByNameResponse* ns1__findGroupWithAttributesByNameResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findGroupWithAttributesByName SOAP
//gsoap ns1  service method-style:	findGroupWithAttributesByName document
//gsoap ns1  service method-encoding:	findGroupWithAttributesByName literal
//gsoap ns1  service method-action:	findGroupWithAttributesByName ""
//gsoap ns1  service method-output-action:	findGroupWithAttributesByName urn:SecurityServer/SecurityServerPortType/findGroupWithAttributesByNameResponse
//gsoap ns1  service method-fault:	findGroupWithAttributesByName ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findGroupWithAttributesByName ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findGroupWithAttributesByName ns1__RemoteException
int __ns1__findGroupWithAttributesByName(
    _ns1__findGroupWithAttributesByName* ns1__findGroupWithAttributesByName,	///< Input parameter
    _ns1__findGroupWithAttributesByNameResponse* ns1__findGroupWithAttributesByNameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removePrincipalFromRole                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removePrincipalFromRole" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removePrincipalFromRoleRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removePrincipalFromRoleResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removePrincipalFromRole(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removePrincipalFromRole*      ns1__removePrincipalFromRole,
    // output parameters:
    _ns1__removePrincipalFromRoleResponse* ns1__removePrincipalFromRoleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removePrincipalFromRole(
    struct soap *soap,
    // input parameters:
    _ns1__removePrincipalFromRole*      ns1__removePrincipalFromRole,
    // output parameters:
    _ns1__removePrincipalFromRoleResponse* ns1__removePrincipalFromRoleResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removePrincipalFromRole SOAP
//gsoap ns1  service method-style:	removePrincipalFromRole document
//gsoap ns1  service method-encoding:	removePrincipalFromRole literal
//gsoap ns1  service method-action:	removePrincipalFromRole ""
//gsoap ns1  service method-output-action:	removePrincipalFromRole urn:SecurityServer/SecurityServerPortType/removePrincipalFromRoleResponse
//gsoap ns1  service method-fault:	removePrincipalFromRole ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removePrincipalFromRole ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removePrincipalFromRole ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removePrincipalFromRole ns1__RemoteException
int __ns1__removePrincipalFromRole(
    _ns1__removePrincipalFromRole*      ns1__removePrincipalFromRole,	///< Input parameter
    _ns1__removePrincipalFromRoleResponse* ns1__removePrincipalFromRoleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findPrincipalWithAttributesByName                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findPrincipalWithAttributesByName" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findPrincipalWithAttributesByNameRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findPrincipalWithAttributesByNameResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findPrincipalWithAttributesByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findPrincipalWithAttributesByName* ns1__findPrincipalWithAttributesByName,
    // output parameters:
    _ns1__findPrincipalWithAttributesByNameResponse* ns1__findPrincipalWithAttributesByNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findPrincipalWithAttributesByName(
    struct soap *soap,
    // input parameters:
    _ns1__findPrincipalWithAttributesByName* ns1__findPrincipalWithAttributesByName,
    // output parameters:
    _ns1__findPrincipalWithAttributesByNameResponse* ns1__findPrincipalWithAttributesByNameResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findPrincipalWithAttributesByName SOAP
//gsoap ns1  service method-style:	findPrincipalWithAttributesByName document
//gsoap ns1  service method-encoding:	findPrincipalWithAttributesByName literal
//gsoap ns1  service method-action:	findPrincipalWithAttributesByName ""
//gsoap ns1  service method-output-action:	findPrincipalWithAttributesByName urn:SecurityServer/SecurityServerPortType/findPrincipalWithAttributesByNameResponse
//gsoap ns1  service method-fault:	findPrincipalWithAttributesByName ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findPrincipalWithAttributesByName ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findPrincipalWithAttributesByName ns1__RemoteException
int __ns1__findPrincipalWithAttributesByName(
    _ns1__findPrincipalWithAttributesByName* ns1__findPrincipalWithAttributesByName,	///< Input parameter
    _ns1__findPrincipalWithAttributesByNameResponse* ns1__findPrincipalWithAttributesByNameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__authenticatePrincipal                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__authenticatePrincipal" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/authenticatePrincipalRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/authenticatePrincipalResponse"

  - SOAP Output Fault: "urn:SecurityServer":ApplicationAccessDeniedException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ExpiredCredentialException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthenticationException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InactiveAccountException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__authenticatePrincipal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__authenticatePrincipal*        ns1__authenticatePrincipal,
    // output parameters:
    _ns1__authenticatePrincipalResponse* ns1__authenticatePrincipalResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__authenticatePrincipal(
    struct soap *soap,
    // input parameters:
    _ns1__authenticatePrincipal*        ns1__authenticatePrincipal,
    // output parameters:
    _ns1__authenticatePrincipalResponse* ns1__authenticatePrincipalResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	authenticatePrincipal SOAP
//gsoap ns1  service method-style:	authenticatePrincipal document
//gsoap ns1  service method-encoding:	authenticatePrincipal literal
//gsoap ns1  service method-action:	authenticatePrincipal ""
//gsoap ns1  service method-output-action:	authenticatePrincipal urn:SecurityServer/SecurityServerPortType/authenticatePrincipalResponse
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__ApplicationAccessDeniedException
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__ExpiredCredentialException
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__InvalidAuthenticationException
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__InactiveAccountException
//gsoap ns1  service method-fault:	authenticatePrincipal ns1__RemoteException
int __ns1__authenticatePrincipal(
    _ns1__authenticatePrincipal*        ns1__authenticatePrincipal,	///< Input parameter
    _ns1__authenticatePrincipalResponse* ns1__authenticatePrincipalResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findGroupMemberships                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findGroupMemberships" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findGroupMembershipsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findGroupMembershipsResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findGroupMemberships(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findGroupMemberships*         ns1__findGroupMemberships,
    // output parameters:
    _ns1__findGroupMembershipsResponse* ns1__findGroupMembershipsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findGroupMemberships(
    struct soap *soap,
    // input parameters:
    _ns1__findGroupMemberships*         ns1__findGroupMemberships,
    // output parameters:
    _ns1__findGroupMembershipsResponse* ns1__findGroupMembershipsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findGroupMemberships SOAP
//gsoap ns1  service method-style:	findGroupMemberships document
//gsoap ns1  service method-encoding:	findGroupMemberships literal
//gsoap ns1  service method-action:	findGroupMemberships ""
//gsoap ns1  service method-output-action:	findGroupMemberships urn:SecurityServer/SecurityServerPortType/findGroupMembershipsResponse
//gsoap ns1  service method-fault:	findGroupMemberships ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findGroupMemberships ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findGroupMemberships ns1__RemoteException
int __ns1__findGroupMemberships(
    _ns1__findGroupMemberships*         ns1__findGroupMemberships,	///< Input parameter
    _ns1__findGroupMembershipsResponse* ns1__findGroupMembershipsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addPrincipalToGroup                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addPrincipalToGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addPrincipalToGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addPrincipalToGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addPrincipalToGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addPrincipalToGroup*          ns1__addPrincipalToGroup,
    // output parameters:
    _ns1__addPrincipalToGroupResponse*  ns1__addPrincipalToGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addPrincipalToGroup(
    struct soap *soap,
    // input parameters:
    _ns1__addPrincipalToGroup*          ns1__addPrincipalToGroup,
    // output parameters:
    _ns1__addPrincipalToGroupResponse*  ns1__addPrincipalToGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addPrincipalToGroup SOAP
//gsoap ns1  service method-style:	addPrincipalToGroup document
//gsoap ns1  service method-encoding:	addPrincipalToGroup literal
//gsoap ns1  service method-action:	addPrincipalToGroup ""
//gsoap ns1  service method-output-action:	addPrincipalToGroup urn:SecurityServer/SecurityServerPortType/addPrincipalToGroupResponse
//gsoap ns1  service method-fault:	addPrincipalToGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	addPrincipalToGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addPrincipalToGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addPrincipalToGroup ns1__RemoteException
int __ns1__addPrincipalToGroup(
    _ns1__addPrincipalToGroup*          ns1__addPrincipalToGroup,	///< Input parameter
    _ns1__addPrincipalToGroupResponse*  ns1__addPrincipalToGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removeGroup                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removeGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removeGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removeGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removeGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removeGroup*                  ns1__removeGroup,
    // output parameters:
    _ns1__removeGroupResponse*          ns1__removeGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removeGroup(
    struct soap *soap,
    // input parameters:
    _ns1__removeGroup*                  ns1__removeGroup,
    // output parameters:
    _ns1__removeGroupResponse*          ns1__removeGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removeGroup SOAP
//gsoap ns1  service method-style:	removeGroup document
//gsoap ns1  service method-encoding:	removeGroup literal
//gsoap ns1  service method-action:	removeGroup ""
//gsoap ns1  service method-output-action:	removeGroup urn:SecurityServer/SecurityServerPortType/removeGroupResponse
//gsoap ns1  service method-fault:	removeGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removeGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removeGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removeGroup ns1__RemoteException
int __ns1__removeGroup(
    _ns1__removeGroup*                  ns1__removeGroup,	///< Input parameter
    _ns1__removeGroupResponse*          ns1__removeGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removeAttributeFromGroup                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removeAttributeFromGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removeAttributeFromGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removeAttributeFromGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removeAttributeFromGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removeAttributeFromGroup*     ns1__removeAttributeFromGroup,
    // output parameters:
    _ns1__removeAttributeFromGroupResponse* ns1__removeAttributeFromGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removeAttributeFromGroup(
    struct soap *soap,
    // input parameters:
    _ns1__removeAttributeFromGroup*     ns1__removeAttributeFromGroup,
    // output parameters:
    _ns1__removeAttributeFromGroupResponse* ns1__removeAttributeFromGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removeAttributeFromGroup SOAP
//gsoap ns1  service method-style:	removeAttributeFromGroup document
//gsoap ns1  service method-encoding:	removeAttributeFromGroup literal
//gsoap ns1  service method-action:	removeAttributeFromGroup ""
//gsoap ns1  service method-output-action:	removeAttributeFromGroup urn:SecurityServer/SecurityServerPortType/removeAttributeFromGroupResponse
//gsoap ns1  service method-fault:	removeAttributeFromGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removeAttributeFromGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removeAttributeFromGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removeAttributeFromGroup ns1__RemoteException
int __ns1__removeAttributeFromGroup(
    _ns1__removeAttributeFromGroup*     ns1__removeAttributeFromGroup,	///< Input parameter
    _ns1__removeAttributeFromGroupResponse* ns1__removeAttributeFromGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addAllPrincipals                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addAllPrincipals" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addAllPrincipalsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addAllPrincipalsResponse"

  - SOAP Output Fault: "urn:SecurityServer":BulkAddFailedException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addAllPrincipals(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addAllPrincipals*             ns1__addAllPrincipals,
    // output parameters:
    _ns1__addAllPrincipalsResponse*     ns1__addAllPrincipalsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addAllPrincipals(
    struct soap *soap,
    // input parameters:
    _ns1__addAllPrincipals*             ns1__addAllPrincipals,
    // output parameters:
    _ns1__addAllPrincipalsResponse*     ns1__addAllPrincipalsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addAllPrincipals SOAP
//gsoap ns1  service method-style:	addAllPrincipals document
//gsoap ns1  service method-encoding:	addAllPrincipals literal
//gsoap ns1  service method-action:	addAllPrincipals ""
//gsoap ns1  service method-output-action:	addAllPrincipals urn:SecurityServer/SecurityServerPortType/addAllPrincipalsResponse
//gsoap ns1  service method-fault:	addAllPrincipals ns1__BulkAddFailedException
//gsoap ns1  service method-fault:	addAllPrincipals ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addAllPrincipals ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addAllPrincipals ns1__RemoteException
int __ns1__addAllPrincipals(
    _ns1__addAllPrincipals*             ns1__addAllPrincipals,	///< Input parameter
    _ns1__addAllPrincipalsResponse*     ns1__addAllPrincipalsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removeAttributeFromPrincipal                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removeAttributeFromPrincipal" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removeAttributeFromPrincipalRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removeAttributeFromPrincipalResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removeAttributeFromPrincipal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removeAttributeFromPrincipal* ns1__removeAttributeFromPrincipal,
    // output parameters:
    _ns1__removeAttributeFromPrincipalResponse* ns1__removeAttributeFromPrincipalResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removeAttributeFromPrincipal(
    struct soap *soap,
    // input parameters:
    _ns1__removeAttributeFromPrincipal* ns1__removeAttributeFromPrincipal,
    // output parameters:
    _ns1__removeAttributeFromPrincipalResponse* ns1__removeAttributeFromPrincipalResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removeAttributeFromPrincipal SOAP
//gsoap ns1  service method-style:	removeAttributeFromPrincipal document
//gsoap ns1  service method-encoding:	removeAttributeFromPrincipal literal
//gsoap ns1  service method-action:	removeAttributeFromPrincipal ""
//gsoap ns1  service method-output-action:	removeAttributeFromPrincipal urn:SecurityServer/SecurityServerPortType/removeAttributeFromPrincipalResponse
//gsoap ns1  service method-fault:	removeAttributeFromPrincipal ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removeAttributeFromPrincipal ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removeAttributeFromPrincipal ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removeAttributeFromPrincipal ns1__RemoteException
int __ns1__removeAttributeFromPrincipal(
    _ns1__removeAttributeFromPrincipal* ns1__removeAttributeFromPrincipal,	///< Input parameter
    _ns1__removeAttributeFromPrincipalResponse* ns1__removeAttributeFromPrincipalResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__addRole                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__addRole" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/addRoleRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/addRoleResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidRoleException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__addRole(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__addRole*                      ns1__addRole,
    // output parameters:
    _ns1__addRoleResponse*              ns1__addRoleResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__addRole(
    struct soap *soap,
    // input parameters:
    _ns1__addRole*                      ns1__addRole,
    // output parameters:
    _ns1__addRoleResponse*              ns1__addRoleResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	addRole SOAP
//gsoap ns1  service method-style:	addRole document
//gsoap ns1  service method-encoding:	addRole literal
//gsoap ns1  service method-action:	addRole ""
//gsoap ns1  service method-output-action:	addRole urn:SecurityServer/SecurityServerPortType/addRoleResponse
//gsoap ns1  service method-fault:	addRole ns1__InvalidRoleException
//gsoap ns1  service method-fault:	addRole ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	addRole ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	addRole ns1__RemoteException
int __ns1__addRole(
    _ns1__addRole*                      ns1__addRole,	///< Input parameter
    _ns1__addRoleResponse*              ns1__addRoleResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findAllPrincipalNames                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findAllPrincipalNames" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findAllPrincipalNamesRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findAllPrincipalNamesResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findAllPrincipalNames(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findAllPrincipalNames*        ns1__findAllPrincipalNames,
    // output parameters:
    _ns1__findAllPrincipalNamesResponse* ns1__findAllPrincipalNamesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findAllPrincipalNames(
    struct soap *soap,
    // input parameters:
    _ns1__findAllPrincipalNames*        ns1__findAllPrincipalNames,
    // output parameters:
    _ns1__findAllPrincipalNamesResponse* ns1__findAllPrincipalNamesResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findAllPrincipalNames SOAP
//gsoap ns1  service method-style:	findAllPrincipalNames document
//gsoap ns1  service method-encoding:	findAllPrincipalNames literal
//gsoap ns1  service method-action:	findAllPrincipalNames ""
//gsoap ns1  service method-output-action:	findAllPrincipalNames urn:SecurityServer/SecurityServerPortType/findAllPrincipalNamesResponse
//gsoap ns1  service method-fault:	findAllPrincipalNames ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findAllPrincipalNames ns1__RemoteException
int __ns1__findAllPrincipalNames(
    _ns1__findAllPrincipalNames*        ns1__findAllPrincipalNames,	///< Input parameter
    _ns1__findAllPrincipalNamesResponse* ns1__findAllPrincipalNamesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__createPrincipalToken                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__createPrincipalToken" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/createPrincipalTokenRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/createPrincipalTokenResponse"

  - SOAP Output Fault: "urn:SecurityServer":ApplicationAccessDeniedException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthenticationException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InactiveAccountException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__createPrincipalToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__createPrincipalToken*         ns1__createPrincipalToken,
    // output parameters:
    _ns1__createPrincipalTokenResponse* ns1__createPrincipalTokenResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__createPrincipalToken(
    struct soap *soap,
    // input parameters:
    _ns1__createPrincipalToken*         ns1__createPrincipalToken,
    // output parameters:
    _ns1__createPrincipalTokenResponse* ns1__createPrincipalTokenResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	createPrincipalToken SOAP
//gsoap ns1  service method-style:	createPrincipalToken document
//gsoap ns1  service method-encoding:	createPrincipalToken literal
//gsoap ns1  service method-action:	createPrincipalToken ""
//gsoap ns1  service method-output-action:	createPrincipalToken urn:SecurityServer/SecurityServerPortType/createPrincipalTokenResponse
//gsoap ns1  service method-fault:	createPrincipalToken ns1__ApplicationAccessDeniedException
//gsoap ns1  service method-fault:	createPrincipalToken ns1__InvalidAuthenticationException
//gsoap ns1  service method-fault:	createPrincipalToken ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	createPrincipalToken ns1__InactiveAccountException
//gsoap ns1  service method-fault:	createPrincipalToken ns1__RemoteException
int __ns1__createPrincipalToken(
    _ns1__createPrincipalToken*         ns1__createPrincipalToken,	///< Input parameter
    _ns1__createPrincipalTokenResponse* ns1__createPrincipalTokenResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__searchRoles                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__searchRoles" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/searchRolesRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/searchRolesResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__searchRoles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__searchRoles*                  ns1__searchRoles,
    // output parameters:
    _ns1__searchRolesResponse*          ns1__searchRolesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__searchRoles(
    struct soap *soap,
    // input parameters:
    _ns1__searchRoles*                  ns1__searchRoles,
    // output parameters:
    _ns1__searchRolesResponse*          ns1__searchRolesResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	searchRoles SOAP
//gsoap ns1  service method-style:	searchRoles document
//gsoap ns1  service method-encoding:	searchRoles literal
//gsoap ns1  service method-action:	searchRoles ""
//gsoap ns1  service method-output-action:	searchRoles urn:SecurityServer/SecurityServerPortType/searchRolesResponse
//gsoap ns1  service method-fault:	searchRoles ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	searchRoles ns1__RemoteException
int __ns1__searchRoles(
    _ns1__searchRoles*                  ns1__searchRoles,	///< Input parameter
    _ns1__searchRolesResponse*          ns1__searchRolesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__removePrincipalFromGroup                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__removePrincipalFromGroup" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/removePrincipalFromGroupRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/removePrincipalFromGroupResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__removePrincipalFromGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__removePrincipalFromGroup*     ns1__removePrincipalFromGroup,
    // output parameters:
    _ns1__removePrincipalFromGroupResponse* ns1__removePrincipalFromGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__removePrincipalFromGroup(
    struct soap *soap,
    // input parameters:
    _ns1__removePrincipalFromGroup*     ns1__removePrincipalFromGroup,
    // output parameters:
    _ns1__removePrincipalFromGroupResponse* ns1__removePrincipalFromGroupResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	removePrincipalFromGroup SOAP
//gsoap ns1  service method-style:	removePrincipalFromGroup document
//gsoap ns1  service method-encoding:	removePrincipalFromGroup literal
//gsoap ns1  service method-action:	removePrincipalFromGroup ""
//gsoap ns1  service method-output-action:	removePrincipalFromGroup urn:SecurityServer/SecurityServerPortType/removePrincipalFromGroupResponse
//gsoap ns1  service method-fault:	removePrincipalFromGroup ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	removePrincipalFromGroup ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	removePrincipalFromGroup ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	removePrincipalFromGroup ns1__RemoteException
int __ns1__removePrincipalFromGroup(
    _ns1__removePrincipalFromGroup*     ns1__removePrincipalFromGroup,	///< Input parameter
    _ns1__removePrincipalFromGroupResponse* ns1__removePrincipalFromGroupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__findPrincipalByName                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__findPrincipalByName" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/findPrincipalByNameRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/findPrincipalByNameResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__findPrincipalByName(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__findPrincipalByName*          ns1__findPrincipalByName,
    // output parameters:
    _ns1__findPrincipalByNameResponse*  ns1__findPrincipalByNameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__findPrincipalByName(
    struct soap *soap,
    // input parameters:
    _ns1__findPrincipalByName*          ns1__findPrincipalByName,
    // output parameters:
    _ns1__findPrincipalByNameResponse*  ns1__findPrincipalByNameResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	findPrincipalByName SOAP
//gsoap ns1  service method-style:	findPrincipalByName document
//gsoap ns1  service method-encoding:	findPrincipalByName literal
//gsoap ns1  service method-action:	findPrincipalByName ""
//gsoap ns1  service method-output-action:	findPrincipalByName urn:SecurityServer/SecurityServerPortType/findPrincipalByNameResponse
//gsoap ns1  service method-fault:	findPrincipalByName ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	findPrincipalByName ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	findPrincipalByName ns1__RemoteException
int __ns1__findPrincipalByName(
    _ns1__findPrincipalByName*          ns1__findPrincipalByName,	///< Input parameter
    _ns1__findPrincipalByNameResponse*  ns1__findPrincipalByNameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__resetPrincipalCredential                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__resetPrincipalCredential" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/resetPrincipalCredentialRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/resetPrincipalCredentialResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidEmailAddressException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidCredentialException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__resetPrincipalCredential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__resetPrincipalCredential*     ns1__resetPrincipalCredential,
    // output parameters:
    _ns1__resetPrincipalCredentialResponse* ns1__resetPrincipalCredentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__resetPrincipalCredential(
    struct soap *soap,
    // input parameters:
    _ns1__resetPrincipalCredential*     ns1__resetPrincipalCredential,
    // output parameters:
    _ns1__resetPrincipalCredentialResponse* ns1__resetPrincipalCredentialResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	resetPrincipalCredential SOAP
//gsoap ns1  service method-style:	resetPrincipalCredential document
//gsoap ns1  service method-encoding:	resetPrincipalCredential literal
//gsoap ns1  service method-action:	resetPrincipalCredential ""
//gsoap ns1  service method-output-action:	resetPrincipalCredential urn:SecurityServer/SecurityServerPortType/resetPrincipalCredentialResponse
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__InvalidEmailAddressException
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__InvalidCredentialException
//gsoap ns1  service method-fault:	resetPrincipalCredential ns1__RemoteException
int __ns1__resetPrincipalCredential(
    _ns1__resetPrincipalCredential*     ns1__resetPrincipalCredential,	///< Input parameter
    _ns1__resetPrincipalCredentialResponse* ns1__resetPrincipalCredentialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__updateGroupAttribute                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__updateGroupAttribute" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/updateGroupAttributeRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/updateGroupAttributeResponse"

  - SOAP Output Fault: "urn:SecurityServer":ObjectNotFoundException (literal)

  - SOAP Output Fault: "urn:SecurityServer":ApplicationPermissionException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__updateGroupAttribute(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__updateGroupAttribute*         ns1__updateGroupAttribute,
    // output parameters:
    _ns1__updateGroupAttributeResponse* ns1__updateGroupAttributeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__updateGroupAttribute(
    struct soap *soap,
    // input parameters:
    _ns1__updateGroupAttribute*         ns1__updateGroupAttribute,
    // output parameters:
    _ns1__updateGroupAttributeResponse* ns1__updateGroupAttributeResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	updateGroupAttribute SOAP
//gsoap ns1  service method-style:	updateGroupAttribute document
//gsoap ns1  service method-encoding:	updateGroupAttribute literal
//gsoap ns1  service method-action:	updateGroupAttribute ""
//gsoap ns1  service method-output-action:	updateGroupAttribute urn:SecurityServer/SecurityServerPortType/updateGroupAttributeResponse
//gsoap ns1  service method-fault:	updateGroupAttribute ns1__ObjectNotFoundException
//gsoap ns1  service method-fault:	updateGroupAttribute ns1__ApplicationPermissionException
//gsoap ns1  service method-fault:	updateGroupAttribute ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	updateGroupAttribute ns1__RemoteException
int __ns1__updateGroupAttribute(
    _ns1__updateGroupAttribute*         ns1__updateGroupAttribute,	///< Input parameter
    _ns1__updateGroupAttributeResponse* ns1__updateGroupAttributeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__isGroupMember                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__isGroupMember" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/isGroupMemberRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/isGroupMemberResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__isGroupMember(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__isGroupMember*                ns1__isGroupMember,
    // output parameters:
    _ns1__isGroupMemberResponse*        ns1__isGroupMemberResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__isGroupMember(
    struct soap *soap,
    // input parameters:
    _ns1__isGroupMember*                ns1__isGroupMember,
    // output parameters:
    _ns1__isGroupMemberResponse*        ns1__isGroupMemberResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	isGroupMember SOAP
//gsoap ns1  service method-style:	isGroupMember document
//gsoap ns1  service method-encoding:	isGroupMember literal
//gsoap ns1  service method-action:	isGroupMember ""
//gsoap ns1  service method-output-action:	isGroupMember urn:SecurityServer/SecurityServerPortType/isGroupMemberResponse
//gsoap ns1  service method-fault:	isGroupMember ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	isGroupMember ns1__RemoteException
int __ns1__isGroupMember(
    _ns1__isGroupMember*                ns1__isGroupMember,	///< Input parameter
    _ns1__isGroupMemberResponse*        ns1__isGroupMemberResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__searchPrincipals                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__searchPrincipals" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/searchPrincipalsRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/searchPrincipalsResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__searchPrincipals(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__searchPrincipals*             ns1__searchPrincipals,
    // output parameters:
    _ns1__searchPrincipalsResponse*     ns1__searchPrincipalsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__searchPrincipals(
    struct soap *soap,
    // input parameters:
    _ns1__searchPrincipals*             ns1__searchPrincipals,
    // output parameters:
    _ns1__searchPrincipalsResponse*     ns1__searchPrincipalsResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	searchPrincipals SOAP
//gsoap ns1  service method-style:	searchPrincipals document
//gsoap ns1  service method-encoding:	searchPrincipals literal
//gsoap ns1  service method-action:	searchPrincipals ""
//gsoap ns1  service method-output-action:	searchPrincipals urn:SecurityServer/SecurityServerPortType/searchPrincipalsResponse
//gsoap ns1  service method-fault:	searchPrincipals ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	searchPrincipals ns1__RemoteException
int __ns1__searchPrincipals(
    _ns1__searchPrincipals*             ns1__searchPrincipals,	///< Input parameter
    _ns1__searchPrincipalsResponse*     ns1__searchPrincipalsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getDomain                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getDomain" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/getDomainRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/getDomainResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getDomain(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__getDomain*                    ns1__getDomain,
    // output parameters:
    _ns1__getDomainResponse*            ns1__getDomainResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getDomain(
    struct soap *soap,
    // input parameters:
    _ns1__getDomain*                    ns1__getDomain,
    // output parameters:
    _ns1__getDomainResponse*            ns1__getDomainResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getDomain SOAP
//gsoap ns1  service method-style:	getDomain document
//gsoap ns1  service method-encoding:	getDomain literal
//gsoap ns1  service method-action:	getDomain ""
//gsoap ns1  service method-output-action:	getDomain urn:SecurityServer/SecurityServerPortType/getDomainResponse
//gsoap ns1  service method-fault:	getDomain ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	getDomain ns1__RemoteException
int __ns1__getDomain(
    _ns1__getDomain*                    ns1__getDomain,	///< Input parameter
    _ns1__getDomainResponse*            ns1__getDomainResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__authenticateApplication                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__authenticateApplication" of service binding "SecurityServerHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "urn:SecurityServer/SecurityServerPortType/authenticateApplicationRequest"

  - Addressing input output action: "urn:SecurityServer/SecurityServerPortType/authenticateApplicationResponse"

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthenticationException (literal)

  - SOAP Output Fault: "urn:SecurityServer":InvalidAuthorizationTokenException (literal)

  - SOAP Output Fault: "urn:SecurityServer":RemoteException (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__authenticateApplication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__authenticateApplication*      ns1__authenticateApplication,
    // output parameters:
    _ns1__authenticateApplicationResponse* ns1__authenticateApplicationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__authenticateApplication(
    struct soap *soap,
    // input parameters:
    _ns1__authenticateApplication*      ns1__authenticateApplication,
    // output parameters:
    _ns1__authenticateApplicationResponse* ns1__authenticateApplicationResponse
  );
@endcode

C++ proxy class (defined in soapSecurityServerHttpBindingProxy.h):
@code
  class SecurityServerHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSecurityServerHttpBindingService.h):
@code
  class SecurityServerHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	authenticateApplication SOAP
//gsoap ns1  service method-style:	authenticateApplication document
//gsoap ns1  service method-encoding:	authenticateApplication literal
//gsoap ns1  service method-action:	authenticateApplication ""
//gsoap ns1  service method-output-action:	authenticateApplication urn:SecurityServer/SecurityServerPortType/authenticateApplicationResponse
//gsoap ns1  service method-fault:	authenticateApplication ns1__InvalidAuthenticationException
//gsoap ns1  service method-fault:	authenticateApplication ns1__InvalidAuthorizationTokenException
//gsoap ns1  service method-fault:	authenticateApplication ns1__RemoteException
int __ns1__authenticateApplication(
    _ns1__authenticateApplication*      ns1__authenticateApplication,	///< Input parameter
    _ns1__authenticateApplicationResponse* ns1__authenticateApplicationResponse	///< Output parameter
);

/**

@page SecurityServerHttpBinding Binding "SecurityServerHttpBinding"

@section SecurityServerHttpBinding_policy_enablers Policy Enablers of Binding  "SecurityServerHttpBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "http://authentication.integration.crowd.atlassian.com"

@section ns1 Top-level root elements of schema "urn:SecurityServer"

  - <ns1:findAllGroupRelationships> @ref _ns1__findAllGroupRelationships
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllGroupRelationships(struct soap*, _ns1__findAllGroupRelationships*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllGroupRelationships(struct soap*, _ns1__findAllGroupRelationships*);
    @endcode

  - <ns1:findAllGroupRelationshipsResponse> @ref _ns1__findAllGroupRelationshipsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllGroupRelationshipsResponse(struct soap*, _ns1__findAllGroupRelationshipsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllGroupRelationshipsResponse(struct soap*, _ns1__findAllGroupRelationshipsResponse*);
    @endcode

  - <ns1:InvalidAuthorizationTokenException> (use wsdl2h option -g to auto-generate)

  - <ns1:RemoteException> (use wsdl2h option -g to auto-generate)

  - <ns1:addGroup> @ref _ns1__addGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addGroup(struct soap*, _ns1__addGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addGroup(struct soap*, _ns1__addGroup*);
    @endcode

  - <ns1:addGroupResponse> @ref _ns1__addGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addGroupResponse(struct soap*, _ns1__addGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addGroupResponse(struct soap*, _ns1__addGroupResponse*);
    @endcode

  - <ns1:InvalidGroupException> (use wsdl2h option -g to auto-generate)

  - <ns1:ApplicationPermissionException> (use wsdl2h option -g to auto-generate)

  - <ns1:addPrincipalToRole> @ref _ns1__addPrincipalToRole
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipalToRole(struct soap*, _ns1__addPrincipalToRole*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipalToRole(struct soap*, _ns1__addPrincipalToRole*);
    @endcode

  - <ns1:addPrincipalToRoleResponse> @ref _ns1__addPrincipalToRoleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipalToRoleResponse(struct soap*, _ns1__addPrincipalToRoleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipalToRoleResponse(struct soap*, _ns1__addPrincipalToRoleResponse*);
    @endcode

  - <ns1:ObjectNotFoundException> (use wsdl2h option -g to auto-generate)

  - <ns1:findPrincipalByToken> @ref _ns1__findPrincipalByToken
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalByToken(struct soap*, _ns1__findPrincipalByToken*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalByToken(struct soap*, _ns1__findPrincipalByToken*);
    @endcode

  - <ns1:findPrincipalByTokenResponse> @ref _ns1__findPrincipalByTokenResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalByTokenResponse(struct soap*, _ns1__findPrincipalByTokenResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalByTokenResponse(struct soap*, _ns1__findPrincipalByTokenResponse*);
    @endcode

  - <ns1:InvalidTokenException> (use wsdl2h option -g to auto-generate)

  - <ns1:updatePrincipalCredential> @ref _ns1__updatePrincipalCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updatePrincipalCredential(struct soap*, _ns1__updatePrincipalCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updatePrincipalCredential(struct soap*, _ns1__updatePrincipalCredential*);
    @endcode

  - <ns1:updatePrincipalCredentialResponse> @ref _ns1__updatePrincipalCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updatePrincipalCredentialResponse(struct soap*, _ns1__updatePrincipalCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updatePrincipalCredentialResponse(struct soap*, _ns1__updatePrincipalCredentialResponse*);
    @endcode

  - <ns1:InvalidCredentialException> (use wsdl2h option -g to auto-generate)

  - <ns1:getGrantedAuthorities> @ref _ns1__getGrantedAuthorities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getGrantedAuthorities(struct soap*, _ns1__getGrantedAuthorities*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getGrantedAuthorities(struct soap*, _ns1__getGrantedAuthorities*);
    @endcode

  - <ns1:getGrantedAuthoritiesResponse> @ref _ns1__getGrantedAuthoritiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getGrantedAuthoritiesResponse(struct soap*, _ns1__getGrantedAuthoritiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getGrantedAuthoritiesResponse(struct soap*, _ns1__getGrantedAuthoritiesResponse*);
    @endcode

  - <ns1:addPrincipal> @ref _ns1__addPrincipal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipal(struct soap*, _ns1__addPrincipal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipal(struct soap*, _ns1__addPrincipal*);
    @endcode

  - <ns1:addPrincipalResponse> @ref _ns1__addPrincipalResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipalResponse(struct soap*, _ns1__addPrincipalResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipalResponse(struct soap*, _ns1__addPrincipalResponse*);
    @endcode

  - <ns1:InvalidUserException> (use wsdl2h option -g to auto-generate)

  - <ns1:addAttributeToPrincipal> @ref _ns1__addAttributeToPrincipal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAttributeToPrincipal(struct soap*, _ns1__addAttributeToPrincipal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAttributeToPrincipal(struct soap*, _ns1__addAttributeToPrincipal*);
    @endcode

  - <ns1:addAttributeToPrincipalResponse> @ref _ns1__addAttributeToPrincipalResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAttributeToPrincipalResponse(struct soap*, _ns1__addAttributeToPrincipalResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAttributeToPrincipalResponse(struct soap*, _ns1__addAttributeToPrincipalResponse*);
    @endcode

  - <ns1:invalidatePrincipalToken> @ref _ns1__invalidatePrincipalToken
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__invalidatePrincipalToken(struct soap*, _ns1__invalidatePrincipalToken*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__invalidatePrincipalToken(struct soap*, _ns1__invalidatePrincipalToken*);
    @endcode

  - <ns1:invalidatePrincipalTokenResponse> @ref _ns1__invalidatePrincipalTokenResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__invalidatePrincipalTokenResponse(struct soap*, _ns1__invalidatePrincipalTokenResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__invalidatePrincipalTokenResponse(struct soap*, _ns1__invalidatePrincipalTokenResponse*);
    @endcode

  - <ns1:findAllGroupNames> @ref _ns1__findAllGroupNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllGroupNames(struct soap*, _ns1__findAllGroupNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllGroupNames(struct soap*, _ns1__findAllGroupNames*);
    @endcode

  - <ns1:findAllGroupNamesResponse> @ref _ns1__findAllGroupNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllGroupNamesResponse(struct soap*, _ns1__findAllGroupNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllGroupNamesResponse(struct soap*, _ns1__findAllGroupNamesResponse*);
    @endcode

  - <ns1:findRoleMemberships> @ref _ns1__findRoleMemberships
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findRoleMemberships(struct soap*, _ns1__findRoleMemberships*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findRoleMemberships(struct soap*, _ns1__findRoleMemberships*);
    @endcode

  - <ns1:findRoleMembershipsResponse> @ref _ns1__findRoleMembershipsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findRoleMembershipsResponse(struct soap*, _ns1__findRoleMembershipsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findRoleMembershipsResponse(struct soap*, _ns1__findRoleMembershipsResponse*);
    @endcode

  - <ns1:removePrincipal> @ref _ns1__removePrincipal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipal(struct soap*, _ns1__removePrincipal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipal(struct soap*, _ns1__removePrincipal*);
    @endcode

  - <ns1:removePrincipalResponse> @ref _ns1__removePrincipalResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipalResponse(struct soap*, _ns1__removePrincipalResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipalResponse(struct soap*, _ns1__removePrincipalResponse*);
    @endcode

  - <ns1:isValidPrincipalToken> @ref _ns1__isValidPrincipalToken
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isValidPrincipalToken(struct soap*, _ns1__isValidPrincipalToken*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isValidPrincipalToken(struct soap*, _ns1__isValidPrincipalToken*);
    @endcode

  - <ns1:isValidPrincipalTokenResponse> @ref _ns1__isValidPrincipalTokenResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isValidPrincipalTokenResponse(struct soap*, _ns1__isValidPrincipalTokenResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isValidPrincipalTokenResponse(struct soap*, _ns1__isValidPrincipalTokenResponse*);
    @endcode

  - <ns1:ApplicationAccessDeniedException> (use wsdl2h option -g to auto-generate)

  - <ns1:authenticatePrincipalSimple> @ref _ns1__authenticatePrincipalSimple
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticatePrincipalSimple(struct soap*, _ns1__authenticatePrincipalSimple*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticatePrincipalSimple(struct soap*, _ns1__authenticatePrincipalSimple*);
    @endcode

  - <ns1:authenticatePrincipalSimpleResponse> @ref _ns1__authenticatePrincipalSimpleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticatePrincipalSimpleResponse(struct soap*, _ns1__authenticatePrincipalSimpleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticatePrincipalSimpleResponse(struct soap*, _ns1__authenticatePrincipalSimpleResponse*);
    @endcode

  - <ns1:ExpiredCredentialException> (use wsdl2h option -g to auto-generate)

  - <ns1:InvalidAuthenticationException> (use wsdl2h option -g to auto-generate)

  - <ns1:InactiveAccountException> (use wsdl2h option -g to auto-generate)

  - <ns1:removeRole> @ref _ns1__removeRole
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeRole(struct soap*, _ns1__removeRole*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeRole(struct soap*, _ns1__removeRole*);
    @endcode

  - <ns1:removeRoleResponse> @ref _ns1__removeRoleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeRoleResponse(struct soap*, _ns1__removeRoleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeRoleResponse(struct soap*, _ns1__removeRoleResponse*);
    @endcode

  - <ns1:getCookieInfo> @ref _ns1__getCookieInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getCookieInfo(struct soap*, _ns1__getCookieInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getCookieInfo(struct soap*, _ns1__getCookieInfo*);
    @endcode

  - <ns1:getCookieInfoResponse> @ref _ns1__getCookieInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getCookieInfoResponse(struct soap*, _ns1__getCookieInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getCookieInfoResponse(struct soap*, _ns1__getCookieInfoResponse*);
    @endcode

  - <ns1:updatePrincipalAttribute> @ref _ns1__updatePrincipalAttribute
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updatePrincipalAttribute(struct soap*, _ns1__updatePrincipalAttribute*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updatePrincipalAttribute(struct soap*, _ns1__updatePrincipalAttribute*);
    @endcode

  - <ns1:updatePrincipalAttributeResponse> @ref _ns1__updatePrincipalAttributeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updatePrincipalAttributeResponse(struct soap*, _ns1__updatePrincipalAttributeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updatePrincipalAttributeResponse(struct soap*, _ns1__updatePrincipalAttributeResponse*);
    @endcode

  - <ns1:searchGroups> @ref _ns1__searchGroups
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchGroups(struct soap*, _ns1__searchGroups*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchGroups(struct soap*, _ns1__searchGroups*);
    @endcode

  - <ns1:searchGroupsResponse> @ref _ns1__searchGroupsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchGroupsResponse(struct soap*, _ns1__searchGroupsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchGroupsResponse(struct soap*, _ns1__searchGroupsResponse*);
    @endcode

  - <ns1:getCacheTime> @ref _ns1__getCacheTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getCacheTime(struct soap*, _ns1__getCacheTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getCacheTime(struct soap*, _ns1__getCacheTime*);
    @endcode

  - <ns1:getCacheTimeResponse> @ref _ns1__getCacheTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getCacheTimeResponse(struct soap*, _ns1__getCacheTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getCacheTimeResponse(struct soap*, _ns1__getCacheTimeResponse*);
    @endcode

  - <ns1:isRoleMember> @ref _ns1__isRoleMember
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isRoleMember(struct soap*, _ns1__isRoleMember*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isRoleMember(struct soap*, _ns1__isRoleMember*);
    @endcode

  - <ns1:isRoleMemberResponse> @ref _ns1__isRoleMemberResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isRoleMemberResponse(struct soap*, _ns1__isRoleMemberResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isRoleMemberResponse(struct soap*, _ns1__isRoleMemberResponse*);
    @endcode

  - <ns1:updateGroup> @ref _ns1__updateGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updateGroup(struct soap*, _ns1__updateGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updateGroup(struct soap*, _ns1__updateGroup*);
    @endcode

  - <ns1:updateGroupResponse> @ref _ns1__updateGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updateGroupResponse(struct soap*, _ns1__updateGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updateGroupResponse(struct soap*, _ns1__updateGroupResponse*);
    @endcode

  - <ns1:addAttributeToGroup> @ref _ns1__addAttributeToGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAttributeToGroup(struct soap*, _ns1__addAttributeToGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAttributeToGroup(struct soap*, _ns1__addAttributeToGroup*);
    @endcode

  - <ns1:addAttributeToGroupResponse> @ref _ns1__addAttributeToGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAttributeToGroupResponse(struct soap*, _ns1__addAttributeToGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAttributeToGroupResponse(struct soap*, _ns1__addAttributeToGroupResponse*);
    @endcode

  - <ns1:findAllRoleNames> @ref _ns1__findAllRoleNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllRoleNames(struct soap*, _ns1__findAllRoleNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllRoleNames(struct soap*, _ns1__findAllRoleNames*);
    @endcode

  - <ns1:findAllRoleNamesResponse> @ref _ns1__findAllRoleNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllRoleNamesResponse(struct soap*, _ns1__findAllRoleNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllRoleNamesResponse(struct soap*, _ns1__findAllRoleNamesResponse*);
    @endcode

  - <ns1:findRoleByName> @ref _ns1__findRoleByName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findRoleByName(struct soap*, _ns1__findRoleByName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findRoleByName(struct soap*, _ns1__findRoleByName*);
    @endcode

  - <ns1:findRoleByNameResponse> @ref _ns1__findRoleByNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findRoleByNameResponse(struct soap*, _ns1__findRoleByNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findRoleByNameResponse(struct soap*, _ns1__findRoleByNameResponse*);
    @endcode

  - <ns1:isCacheEnabled> @ref _ns1__isCacheEnabled
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isCacheEnabled(struct soap*, _ns1__isCacheEnabled*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isCacheEnabled(struct soap*, _ns1__isCacheEnabled*);
    @endcode

  - <ns1:isCacheEnabledResponse> @ref _ns1__isCacheEnabledResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isCacheEnabledResponse(struct soap*, _ns1__isCacheEnabledResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isCacheEnabledResponse(struct soap*, _ns1__isCacheEnabledResponse*);
    @endcode

  - <ns1:findGroupByName> @ref _ns1__findGroupByName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupByName(struct soap*, _ns1__findGroupByName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupByName(struct soap*, _ns1__findGroupByName*);
    @endcode

  - <ns1:findGroupByNameResponse> @ref _ns1__findGroupByNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupByNameResponse(struct soap*, _ns1__findGroupByNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupByNameResponse(struct soap*, _ns1__findGroupByNameResponse*);
    @endcode

  - <ns1:findGroupWithAttributesByName> @ref _ns1__findGroupWithAttributesByName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupWithAttributesByName(struct soap*, _ns1__findGroupWithAttributesByName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupWithAttributesByName(struct soap*, _ns1__findGroupWithAttributesByName*);
    @endcode

  - <ns1:findGroupWithAttributesByNameResponse> @ref _ns1__findGroupWithAttributesByNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupWithAttributesByNameResponse(struct soap*, _ns1__findGroupWithAttributesByNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupWithAttributesByNameResponse(struct soap*, _ns1__findGroupWithAttributesByNameResponse*);
    @endcode

  - <ns1:removePrincipalFromRole> @ref _ns1__removePrincipalFromRole
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipalFromRole(struct soap*, _ns1__removePrincipalFromRole*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipalFromRole(struct soap*, _ns1__removePrincipalFromRole*);
    @endcode

  - <ns1:removePrincipalFromRoleResponse> @ref _ns1__removePrincipalFromRoleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipalFromRoleResponse(struct soap*, _ns1__removePrincipalFromRoleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipalFromRoleResponse(struct soap*, _ns1__removePrincipalFromRoleResponse*);
    @endcode

  - <ns1:findPrincipalWithAttributesByName> @ref _ns1__findPrincipalWithAttributesByName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalWithAttributesByName(struct soap*, _ns1__findPrincipalWithAttributesByName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalWithAttributesByName(struct soap*, _ns1__findPrincipalWithAttributesByName*);
    @endcode

  - <ns1:findPrincipalWithAttributesByNameResponse> @ref _ns1__findPrincipalWithAttributesByNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalWithAttributesByNameResponse(struct soap*, _ns1__findPrincipalWithAttributesByNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalWithAttributesByNameResponse(struct soap*, _ns1__findPrincipalWithAttributesByNameResponse*);
    @endcode

  - <ns1:authenticatePrincipal> @ref _ns1__authenticatePrincipal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticatePrincipal(struct soap*, _ns1__authenticatePrincipal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticatePrincipal(struct soap*, _ns1__authenticatePrincipal*);
    @endcode

  - <ns1:authenticatePrincipalResponse> @ref _ns1__authenticatePrincipalResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticatePrincipalResponse(struct soap*, _ns1__authenticatePrincipalResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticatePrincipalResponse(struct soap*, _ns1__authenticatePrincipalResponse*);
    @endcode

  - <ns1:findGroupMemberships> @ref _ns1__findGroupMemberships
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupMemberships(struct soap*, _ns1__findGroupMemberships*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupMemberships(struct soap*, _ns1__findGroupMemberships*);
    @endcode

  - <ns1:findGroupMembershipsResponse> @ref _ns1__findGroupMembershipsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findGroupMembershipsResponse(struct soap*, _ns1__findGroupMembershipsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findGroupMembershipsResponse(struct soap*, _ns1__findGroupMembershipsResponse*);
    @endcode

  - <ns1:addPrincipalToGroup> @ref _ns1__addPrincipalToGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipalToGroup(struct soap*, _ns1__addPrincipalToGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipalToGroup(struct soap*, _ns1__addPrincipalToGroup*);
    @endcode

  - <ns1:addPrincipalToGroupResponse> @ref _ns1__addPrincipalToGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addPrincipalToGroupResponse(struct soap*, _ns1__addPrincipalToGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addPrincipalToGroupResponse(struct soap*, _ns1__addPrincipalToGroupResponse*);
    @endcode

  - <ns1:removeGroup> @ref _ns1__removeGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeGroup(struct soap*, _ns1__removeGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeGroup(struct soap*, _ns1__removeGroup*);
    @endcode

  - <ns1:removeGroupResponse> @ref _ns1__removeGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeGroupResponse(struct soap*, _ns1__removeGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeGroupResponse(struct soap*, _ns1__removeGroupResponse*);
    @endcode

  - <ns1:removeAttributeFromGroup> @ref _ns1__removeAttributeFromGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeAttributeFromGroup(struct soap*, _ns1__removeAttributeFromGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeAttributeFromGroup(struct soap*, _ns1__removeAttributeFromGroup*);
    @endcode

  - <ns1:removeAttributeFromGroupResponse> @ref _ns1__removeAttributeFromGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeAttributeFromGroupResponse(struct soap*, _ns1__removeAttributeFromGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeAttributeFromGroupResponse(struct soap*, _ns1__removeAttributeFromGroupResponse*);
    @endcode

  - <ns1:addAllPrincipals> @ref _ns1__addAllPrincipals
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAllPrincipals(struct soap*, _ns1__addAllPrincipals*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAllPrincipals(struct soap*, _ns1__addAllPrincipals*);
    @endcode

  - <ns1:addAllPrincipalsResponse> @ref _ns1__addAllPrincipalsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addAllPrincipalsResponse(struct soap*, _ns1__addAllPrincipalsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addAllPrincipalsResponse(struct soap*, _ns1__addAllPrincipalsResponse*);
    @endcode

  - <ns1:BulkAddFailedException> (use wsdl2h option -g to auto-generate)

  - <ns1:removeAttributeFromPrincipal> @ref _ns1__removeAttributeFromPrincipal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeAttributeFromPrincipal(struct soap*, _ns1__removeAttributeFromPrincipal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeAttributeFromPrincipal(struct soap*, _ns1__removeAttributeFromPrincipal*);
    @endcode

  - <ns1:removeAttributeFromPrincipalResponse> @ref _ns1__removeAttributeFromPrincipalResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removeAttributeFromPrincipalResponse(struct soap*, _ns1__removeAttributeFromPrincipalResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removeAttributeFromPrincipalResponse(struct soap*, _ns1__removeAttributeFromPrincipalResponse*);
    @endcode

  - <ns1:addRole> @ref _ns1__addRole
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addRole(struct soap*, _ns1__addRole*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addRole(struct soap*, _ns1__addRole*);
    @endcode

  - <ns1:addRoleResponse> @ref _ns1__addRoleResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__addRoleResponse(struct soap*, _ns1__addRoleResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__addRoleResponse(struct soap*, _ns1__addRoleResponse*);
    @endcode

  - <ns1:InvalidRoleException> (use wsdl2h option -g to auto-generate)

  - <ns1:findAllPrincipalNames> @ref _ns1__findAllPrincipalNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllPrincipalNames(struct soap*, _ns1__findAllPrincipalNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllPrincipalNames(struct soap*, _ns1__findAllPrincipalNames*);
    @endcode

  - <ns1:findAllPrincipalNamesResponse> @ref _ns1__findAllPrincipalNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findAllPrincipalNamesResponse(struct soap*, _ns1__findAllPrincipalNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findAllPrincipalNamesResponse(struct soap*, _ns1__findAllPrincipalNamesResponse*);
    @endcode

  - <ns1:createPrincipalToken> @ref _ns1__createPrincipalToken
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__createPrincipalToken(struct soap*, _ns1__createPrincipalToken*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__createPrincipalToken(struct soap*, _ns1__createPrincipalToken*);
    @endcode

  - <ns1:createPrincipalTokenResponse> @ref _ns1__createPrincipalTokenResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__createPrincipalTokenResponse(struct soap*, _ns1__createPrincipalTokenResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__createPrincipalTokenResponse(struct soap*, _ns1__createPrincipalTokenResponse*);
    @endcode

  - <ns1:searchRoles> @ref _ns1__searchRoles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchRoles(struct soap*, _ns1__searchRoles*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchRoles(struct soap*, _ns1__searchRoles*);
    @endcode

  - <ns1:searchRolesResponse> @ref _ns1__searchRolesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchRolesResponse(struct soap*, _ns1__searchRolesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchRolesResponse(struct soap*, _ns1__searchRolesResponse*);
    @endcode

  - <ns1:removePrincipalFromGroup> @ref _ns1__removePrincipalFromGroup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipalFromGroup(struct soap*, _ns1__removePrincipalFromGroup*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipalFromGroup(struct soap*, _ns1__removePrincipalFromGroup*);
    @endcode

  - <ns1:removePrincipalFromGroupResponse> @ref _ns1__removePrincipalFromGroupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__removePrincipalFromGroupResponse(struct soap*, _ns1__removePrincipalFromGroupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__removePrincipalFromGroupResponse(struct soap*, _ns1__removePrincipalFromGroupResponse*);
    @endcode

  - <ns1:findPrincipalByName> @ref _ns1__findPrincipalByName
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalByName(struct soap*, _ns1__findPrincipalByName*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalByName(struct soap*, _ns1__findPrincipalByName*);
    @endcode

  - <ns1:findPrincipalByNameResponse> @ref _ns1__findPrincipalByNameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__findPrincipalByNameResponse(struct soap*, _ns1__findPrincipalByNameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__findPrincipalByNameResponse(struct soap*, _ns1__findPrincipalByNameResponse*);
    @endcode

  - <ns1:resetPrincipalCredential> @ref _ns1__resetPrincipalCredential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__resetPrincipalCredential(struct soap*, _ns1__resetPrincipalCredential*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__resetPrincipalCredential(struct soap*, _ns1__resetPrincipalCredential*);
    @endcode

  - <ns1:resetPrincipalCredentialResponse> @ref _ns1__resetPrincipalCredentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__resetPrincipalCredentialResponse(struct soap*, _ns1__resetPrincipalCredentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__resetPrincipalCredentialResponse(struct soap*, _ns1__resetPrincipalCredentialResponse*);
    @endcode

  - <ns1:InvalidEmailAddressException> (use wsdl2h option -g to auto-generate)

  - <ns1:updateGroupAttribute> @ref _ns1__updateGroupAttribute
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updateGroupAttribute(struct soap*, _ns1__updateGroupAttribute*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updateGroupAttribute(struct soap*, _ns1__updateGroupAttribute*);
    @endcode

  - <ns1:updateGroupAttributeResponse> @ref _ns1__updateGroupAttributeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__updateGroupAttributeResponse(struct soap*, _ns1__updateGroupAttributeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__updateGroupAttributeResponse(struct soap*, _ns1__updateGroupAttributeResponse*);
    @endcode

  - <ns1:isGroupMember> @ref _ns1__isGroupMember
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isGroupMember(struct soap*, _ns1__isGroupMember*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isGroupMember(struct soap*, _ns1__isGroupMember*);
    @endcode

  - <ns1:isGroupMemberResponse> @ref _ns1__isGroupMemberResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__isGroupMemberResponse(struct soap*, _ns1__isGroupMemberResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__isGroupMemberResponse(struct soap*, _ns1__isGroupMemberResponse*);
    @endcode

  - <ns1:searchPrincipals> @ref _ns1__searchPrincipals
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchPrincipals(struct soap*, _ns1__searchPrincipals*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchPrincipals(struct soap*, _ns1__searchPrincipals*);
    @endcode

  - <ns1:searchPrincipalsResponse> @ref _ns1__searchPrincipalsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__searchPrincipalsResponse(struct soap*, _ns1__searchPrincipalsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__searchPrincipalsResponse(struct soap*, _ns1__searchPrincipalsResponse*);
    @endcode

  - <ns1:getDomain> @ref _ns1__getDomain
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getDomain(struct soap*, _ns1__getDomain*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getDomain(struct soap*, _ns1__getDomain*);
    @endcode

  - <ns1:getDomainResponse> @ref _ns1__getDomainResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__getDomainResponse(struct soap*, _ns1__getDomainResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__getDomainResponse(struct soap*, _ns1__getDomainResponse*);
    @endcode

  - <ns1:authenticateApplication> @ref _ns1__authenticateApplication
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticateApplication(struct soap*, _ns1__authenticateApplication*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticateApplication(struct soap*, _ns1__authenticateApplication*);
    @endcode

  - <ns1:authenticateApplicationResponse> @ref _ns1__authenticateApplicationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__authenticateApplicationResponse(struct soap*, _ns1__authenticateApplicationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__authenticateApplicationResponse(struct soap*, _ns1__authenticateApplicationResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://soap.integration.crowd.atlassian.com"

@section ns4 Top-level root elements of schema "http://exception.integration.crowd.atlassian.com"

@section ns5 Top-level root elements of schema "http://rmi.java"

@section ns6 Top-level root elements of schema "http://lang.java"

@section ns7 Top-level root elements of schema "http://model.integration.crowd.atlassian.com"

@section ns8 Top-level root elements of schema "http://user.model.integration.crowd.atlassian.com"

@section ns1 Top-level root elements of schema "urn:SecurityServer"

*/

/* End of crowdsoap.h */
